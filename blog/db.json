{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/polaris-images/android-chrome-192x192.png","path":"polaris-images/android-chrome-192x192.png","modified":0,"renderable":0},{"_id":"source/polaris-images/android-chrome-256x256.png","path":"polaris-images/android-chrome-256x256.png","modified":0,"renderable":0},{"_id":"source/polaris-images/apple-touch-icon.png","path":"polaris-images/apple-touch-icon.png","modified":0,"renderable":0},{"_id":"source/polaris-images/browserconfig.xml","path":"polaris-images/browserconfig.xml","modified":0,"renderable":0},{"_id":"source/polaris-images/favicon-16x16.png","path":"polaris-images/favicon-16x16.png","modified":0,"renderable":0},{"_id":"source/polaris-images/favicon-32x32.png","path":"polaris-images/favicon-32x32.png","modified":0,"renderable":0},{"_id":"source/polaris-images/favicon.ico","path":"polaris-images/favicon.ico","modified":0,"renderable":0},{"_id":"source/polaris-images/mstile-150x150.png","path":"polaris-images/mstile-150x150.png","modified":0,"renderable":0},{"_id":"source/polaris-images/safari-pinned-tab.svg","path":"polaris-images/safari-pinned-tab.svg","modified":0,"renderable":0},{"_id":"source/polaris-images/site.webmanifest","path":"polaris-images/site.webmanifest","modified":0,"renderable":0},{"_id":"source/polaris-images/android-chrome-512x512.png","path":"polaris-images/android-chrome-512x512.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/affix.js","path":"js/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/exturl.js","path":"js/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/js.cookie.js","path":"js/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/post-details.js","path":"js/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/scroll-cookie.js","path":"js/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/scrollspy.js","path":"js/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"source/polaris-images/avatar/avatar.png","path":"polaris-images/avatar/avatar.png","modified":0,"renderable":0}],"Cache":[{"_id":"themes/next/.all-contributorsrc","hash":"43eb0149c78e464c695f0dd758bb8c59353182b3","modified":1555062862522},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1555062862524},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1555062862526},{"_id":"themes/next/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1555062862528},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1555062862529},{"_id":"themes/next/.gitignore","hash":"69e702b833c6aa9646ad24c45dd9cf00ab5ce6b9","modified":1555062862563},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1555062862564},{"_id":"themes/next/.travis.yml","hash":"fb9ac54e875f6ea16d5c83db497f6bd70ae83198","modified":1555062862567},{"_id":"themes/next/LICENSE.md","hash":"0a9c7399f102b4eb0a6950dd31264be421557c7d","modified":1555062862569},{"_id":"themes/next/README.md","hash":"3f72e5a5051ca2bdaccdda684c46dc4fdb4413a6","modified":1555062862570},{"_id":"themes/next/_config.yml","hash":"9b2bdb754bda3a17d6c54db95d91a06c07a59569","modified":1557228638232},{"_id":"themes/next/bower.json","hash":"3c1c82d1644f5690534e71feed8df82e563748e0","modified":1555062862574},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1555062862575},{"_id":"themes/next/gulpfile.coffee","hash":"6407d9063bd88ede299ff7c2a59cf2c82e079476","modified":1555062862618},{"_id":"themes/next/package.json","hash":"23449a55881f7316766c0fcf3ce4c93adbc6076b","modified":1555062862815},{"_id":"source/_posts/Linux初阶.md","hash":"12330bea24b2e38cd313d815811478fe0ea01fb6","modified":1556261993448},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1557226267146},{"_id":"source/_posts/人生记录三.md","hash":"649cf3cd3a9a70e898649f3e1ccab7ba04350506","modified":1555041404327},{"_id":"source/_posts/人生记录二.md","hash":"497ed6fd2cebed086dbb1f305f2a72ffe1968f50","modified":1555041396123},{"_id":"source/_posts/人生记录四.md","hash":"586dba01f612c2d068f47384821b095cf19c4661","modified":1555041412341},{"_id":"source/_posts/霍爱简评.md","hash":"a81df9406b14f788619f76775b09a871cded2085","modified":1556262019033},{"_id":"source/polaris-images/android-chrome-192x192.png","hash":"eaa5359a9db972d1590d1e73bda682eb285a1b1e","modified":1556253620581},{"_id":"source/polaris-images/android-chrome-256x256.png","hash":"d260ae2f198da0a4ed1bdcfed19a7cad151a476c","modified":1556242845471},{"_id":"source/polaris-images/apple-touch-icon.png","hash":"797efd8443a64e2395fff25fa05c971a4dc40fea","modified":1556253620640},{"_id":"source/polaris-images/browserconfig.xml","hash":"974aea18bda5a95802c06b80126ab1d96d91d708","modified":1556253620677},{"_id":"source/polaris-images/favicon-16x16.png","hash":"fe94abcb1ffb5309a013bcd4dca46ea487932a8c","modified":1556253620740},{"_id":"source/polaris-images/favicon-32x32.png","hash":"64df69a55ebd8131c8614855fe8ebb637a801010","modified":1556253620769},{"_id":"source/polaris-images/favicon.ico","hash":"d264427d1ad7bcab9ffd16c44193ddb46719cd12","modified":1556253620714},{"_id":"source/polaris-images/mstile-150x150.png","hash":"0c7d76f764285712eb9c08dec6a77c2ffcaea6f4","modified":1556253620817},{"_id":"source/polaris-images/safari-pinned-tab.svg","hash":"b957ec20d81dcddd0b321c3e75960e15cdac5e84","modified":1556253620854},{"_id":"source/polaris-images/site.webmanifest","hash":"13e5aa58eb2182d8ace63266856c8cc29c47c083","modified":1556253620898},{"_id":"source/categories/index.md","hash":"4b7a52b2416484cf74c77eeba9061c544133cd52","modified":1556264549412},{"_id":"source/tags/index.md","hash":"da11ffdbfcac4dc6b7ef8cc4102a9da0b91a1cab","modified":1556264579171},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"f7ddb7faed8031a9f40eae4ee7bb48c1bc50fd14","modified":1555062862531},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"78756d8a45b22bdaa51f12b06907bff44afee83e","modified":1555062862533},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"1e212fe229bd659726b4a3bcf4b5b14e0310ba3a","modified":1555062862535},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"66e529edef048f3fab87d9670fa8999f483292bf","modified":1555062862543},{"_id":"themes/next/.github/auto_assign.yml","hash":"9fe0dbe3f6edc59bf10ea25b14eba0e92e2c8f42","modified":1555062862545},{"_id":"themes/next/.github/config.yml","hash":"cbd06d0c40afa9fdf056765120e9085826b00d20","modified":1555062862549},{"_id":"themes/next/.github/eslint-disable-bot.yml","hash":"e06053d417579ed967a94166deb6bda5ce41d805","modified":1555062862551},{"_id":"themes/next/.github/lock.yml","hash":"4f1070097b614b24050f238694127e3573ce8472","modified":1555062862552},{"_id":"themes/next/.github/mergeable.yml","hash":"1105a6eb0d4ee1b1bf1554c5c51a47160abed62a","modified":1555062862554},{"_id":"themes/next/.github/release-drafter.yml","hash":"0f826b5ea4646008e2e147dca8b4842ecf96d093","modified":1555062862555},{"_id":"themes/next/.github/stale.yml","hash":"85975c43d606c39b91c0ad32197154be9d482a09","modified":1555062862557},{"_id":"themes/next/.github/support.yml","hash":"7ce2722d6904c31a086444c422dc49b6aa310651","modified":1555062862558},{"_id":"themes/next/.github/weekly-digest.yml","hash":"6db3bcad65c3156de298f6a3ffd3ba887af4aa4f","modified":1555062862561},{"_id":"themes/next/.github/topissuebot.yml","hash":"5091c3bc6f3df303d16d853ce65a302601c1e875","modified":1555062862560},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"1e49c08b446678336b2eacc8bf581faca969f34b","modified":1555062862581},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1555062862579},{"_id":"themes/next/docs/AUTHORS.md","hash":"51a0a13da55ff3d596970b2f9ab4531c6b2211f2","modified":1555062862583},{"_id":"themes/next/docs/DATA-FILES.md","hash":"9a1895c0a0db705c4c48f512e86917f9af1ec3fb","modified":1555062862584},{"_id":"themes/next/docs/INSTALLATION.md","hash":"b74ef6fedf76cdb156e2265759ee0a789ddd49cc","modified":1555062862586},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"721a1aa9feed1b580ab99af8e69ed22699121e88","modified":1555062862587},{"_id":"themes/next/docs/LICENSE.txt","hash":"ae5ad07e4f4106bad55535dba042221539e6c7f9","modified":1555062862589},{"_id":"themes/next/docs/MATH.md","hash":"0540cd9c961b07931af9f38a83bc9a0f90cd5291","modified":1555062862590},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"c9f2ed8e15c137b1885d9ca8b7197d9f457971e9","modified":1555062862592},{"_id":"themes/next/languages/de.yml","hash":"79b3221344da335743b5ef5a82efa9338d64feb0","modified":1555062862620},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1555062862622},{"_id":"themes/next/languages/en.yml","hash":"d66b8b48840443a4f9c72c7696a21e292f685a47","modified":1555062862623},{"_id":"themes/next/languages/es.yml","hash":"db1a9f2af477212544c830c2dd986400e26ddd6a","modified":1555062862625},{"_id":"themes/next/languages/fr.yml","hash":"2429c90dad5bb865e3a969be2b373f19b3a77b3b","modified":1555062862627},{"_id":"themes/next/languages/id.yml","hash":"f3302a4dfdc9be38a52d6e081411574b1ea01671","modified":1555062862629},{"_id":"themes/next/languages/it.yml","hash":"31eb878b53d60ff47e3e534cdd7a839c8801ac6e","modified":1555062862631},{"_id":"themes/next/languages/ja.yml","hash":"3f25eca504ee5a519987b4402731f1bb7f5191c9","modified":1555062862634},{"_id":"themes/next/languages/ko.yml","hash":"75f2fe142f76bf623e34ed3570598226f55f2b8b","modified":1555062862635},{"_id":"themes/next/languages/nl.yml","hash":"08f16ce395dacc88847fc30dc6b985ce22fb8948","modified":1555062862637},{"_id":"themes/next/languages/pt-BR.yml","hash":"c7de8b77f44e75be4f04423088a1c891537aa601","modified":1555062862638},{"_id":"themes/next/languages/pt.yml","hash":"ca5072c967e5eb1178ffed91827459eda6e4e6e2","modified":1555062862640},{"_id":"themes/next/languages/ru.yml","hash":"720b92a9ec075b68737d296b1f29ad8e01151c85","modified":1555062862641},{"_id":"themes/next/languages/tr.yml","hash":"6d2f53d3687a7a46c67c78ab47908accd8812add","modified":1555062862643},{"_id":"themes/next/languages/uk.yml","hash":"6320439c6e9ff81e5b8f8129ca16e9a744b37032","modified":1555062862645},{"_id":"themes/next/languages/vi.yml","hash":"e2f0dd7f020a36aa6b73ed4d00dcc4259a7e5e9d","modified":1555062862647},{"_id":"themes/next/languages/zh-CN.yml","hash":"069f15da910d6f9756be448167c07ea5aa5dc346","modified":1555062862648},{"_id":"themes/next/languages/zh-HK.yml","hash":"c22113c4a6c748c18093dae56da5a9e8c5b963cd","modified":1555062862649},{"_id":"themes/next/languages/zh-TW.yml","hash":"dbf4dd87716babb2db4f5332fae9ec190a6f636a","modified":1555062862651},{"_id":"themes/next/layout/_layout.swig","hash":"7c2e4841a320ae7ac74b25074c173de750e06ca1","modified":1556259197353},{"_id":"themes/next/layout/archive.swig","hash":"61bc56e77e653684fc834f63dcbdadf18687c748","modified":1555062862803},{"_id":"themes/next/layout/category.swig","hash":"ad0ac6a1ff341f8eab9570e7fb443962948c5f9d","modified":1555062862805},{"_id":"themes/next/layout/index.swig","hash":"bdcc9f57adef49706b16b107791cacecbc23c1dc","modified":1555062862807},{"_id":"themes/next/layout/page.swig","hash":"5d06ee8f477ffc39932d0251aa792ffcaf8faf14","modified":1555062862809},{"_id":"themes/next/layout/post.swig","hash":"af74e97d57cf00cde6f8dbd4364f27910915454e","modified":1555062862810},{"_id":"themes/next/layout/schedule.swig","hash":"e79f43df0e9a6cf48bbf00882de48c5a58080247","modified":1555062862812},{"_id":"themes/next/layout/tag.swig","hash":"283519d4d5b67814412863a3e0212bac18bcc5a0","modified":1555062862814},{"_id":"themes/next/scripts/merge-configs.js","hash":"5f96f63e86825fd7028c2522e4111103e261a758","modified":1555062862823},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1555062862826},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1555062863203},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1555062863204},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1555062863206},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1555062863108},{"_id":"source/polaris-images/android-chrome-512x512.png","hash":"478431276dadc58598b2bb67baebc63ff6effca7","modified":1556253620585},{"_id":"themes/next/.github/ISSUE_TEMPLATE/custom-issue-template.md","hash":"245917ffaa296bc2d9a85444acf639077ca25944","modified":1555062862539},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"59b2b45e151972bbe08582cde22f398e58832765","modified":1555062862540},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"795b8ddb251da8e2327299d5f7dbf446fb9867c6","modified":1555062862537},{"_id":"themes/next/.github/ISSUE_TEMPLATE/non-english.md","hash":"ae22e700b7c63c60746321719a20d34022ad78d9","modified":1555062862542},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"7b2963daac19b0c14f98ebef375d5fbce8fc3f44","modified":1555062862597},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"a51de08657f5946f4028b11373280ddc04639525","modified":1555062862595},{"_id":"themes/next/docs/ru/README.md","hash":"aeb95129ab1da9ec41786bfa86dc32c739ee6358","modified":1555062862598},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"1a4e41adcf5831057f3f7b3025ed4a5ef7c442b4","modified":1555062862600},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"018a259694f4a8c7c384e1f323531442cba5fbf3","modified":1555062862604},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"aaf25d304793344e2d026062768c93005723f5c6","modified":1555062862602},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"508caa37443407860d03f4d8bd56b007585125ef","modified":1555062862605},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"67f4a987e7db0ab1ce1ea4c311f2961df07b6681","modified":1555062862607},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"baca12cc24be082f1db28c7f283493569666321c","modified":1555062862610},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"b17fc344ff61603f83387c0f9b2b2189aae81d50","modified":1555062862612},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"734b371a0dd910eb9fe087f50c95ce35340bb832","modified":1555062862614},{"_id":"themes/next/docs/zh-CN/README.md","hash":"058c4c6f17c144d88d64c0b12cbd4f1c9fc61522","modified":1555062862615},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"2095d1214a4e519a1d31b67b41c89080fa3285d3","modified":1555062862617},{"_id":"themes/next/layout/_custom/head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1555062862654},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1555062862656},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1555062862655},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"891ab67815969dd8736cb22fbbb3f791b8fff4e4","modified":1555062862663},{"_id":"themes/next/layout/_macro/post.swig","hash":"31ba947998f0c962b04ae7f42f9d3db934209a79","modified":1555062862665},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"91017f58f83d9505ce99109fffdc51c032bf017e","modified":1555062862666},{"_id":"themes/next/layout/_partials/comments.swig","hash":"d0b9e841d55c974d02f43823a06a2627f8e46431","modified":1555062862668},{"_id":"themes/next/layout/_partials/footer.swig","hash":"9a79dde1412b1b1473380e8b6cacfe1930ed321b","modified":1555062862670},{"_id":"themes/next/layout/_partials/github-banner.swig","hash":"1ad13269b43b900356f3bdab7947d6a86f035a2c","modified":1555062862673},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"914155d5d758306cff405beefd4a07973fd8fc77","modified":1555062862692},{"_id":"themes/next/layout/_partials/post-edit.swig","hash":"dee345054d564dd56f74bb143942d3edd1cb8150","modified":1555062862693},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"cccd93d30787675010b1a74ef02eb5b813ec1d96","modified":1555062862717},{"_id":"themes/next/layout/_scripts/exturl.swig","hash":"c2e8f4b3a2bf991320ecc827dcdc227399ad5b51","modified":1555062862719},{"_id":"themes/next/layout/_scripts/next-boot.swig","hash":"50c3ae6b50f173ae70f8c3312f7c6da1097eb9b6","modified":1555062862720},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"efb3404a3303622f3be60944d9d1926972c5c248","modified":1555062862722},{"_id":"themes/next/layout/_scripts/scroll-cookie.swig","hash":"8a992b7fe42b9c1a5eb9d937b0827aed91586d94","modified":1555062862733},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"4130f995f0c4f81a44266194ecae9df96fad174c","modified":1555062862735},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"87bcb495f7ddd81cc3fe2c2a886e51c08053019b","modified":1555062862759},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"4b93dc7ac0573c402aabcb5c933bbcb893b07c51","modified":1555062862761},{"_id":"themes/next/layout/_third-party/chatra.swig","hash":"87182367d7954457cb2498bbfa9445c03c2d619e","modified":1555062862762},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"07fc0ae1a30c5aa9269d6efdaec598164b1d191c","modified":1555062862777},{"_id":"themes/next/layout/_third-party/mermaid.swig","hash":"80dfc0879866e6512cb67590a3b2d8741a66f980","modified":1555062862784},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"7db4ad4a8dd5420dad2f6890f5299945df0af970","modified":1555062862786},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"76f5933925670044ec65b454295ba7e0a8439986","modified":1555062862788},{"_id":"themes/next/layout/_third-party/pdf.swig","hash":"4ae61c7efb16e962385bfe522a38c4d29cdcccbe","modified":1555062862789},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"7cc1294a5fbedf3502688248a433c358339e5ae0","modified":1555062862791},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"c476dc3693a9dd0be2d136a45b0d7fdef55d4d92","modified":1555062862793},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"882cd0b68c493af1b6d945660f9c21085e006ffc","modified":1555062862795},{"_id":"themes/next/layout/_third-party/tidio.swig","hash":"b44010cd577e4d063c3406772938c4b117ec7b7b","modified":1555062862802},{"_id":"themes/next/scripts/filters/exturl.js","hash":"b19c7c1021e57367b3b3bbf5678381017ed5667d","modified":1555062862818},{"_id":"themes/next/scripts/helpers/engine.js","hash":"cdb6152582313268d970ffeef99b4a8a7850f034","modified":1555062862820},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"a40ce6bc852bb4bff8b9f984fa064741dd151e96","modified":1555062862821},{"_id":"themes/next/scripts/tags/button.js","hash":"95a520f6529424a03c7ead6dbfd5e626d672febb","modified":1555062862829},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"4519ab8e6898f2ee90d05cde060375462b937a7d","modified":1555062862830},{"_id":"themes/next/scripts/tags/exturl.js","hash":"f9f25905adecfb8be49def4ff3b0b8bbc6955d84","modified":1555062862833},{"_id":"themes/next/scripts/tags/full-image.js","hash":"a6b2264215c555c553b2c5db85fa90678798d0d5","modified":1555062862834},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"23d839333422375e85d44e476f554faf49973a3c","modified":1555062862836},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"ab4a82a7246265717556c7a42f897430340b88cf","modified":1555062862838},{"_id":"themes/next/scripts/tags/label.js","hash":"fc83f4e1be2c34e81cb79938f4f99973eba1ea60","modified":1555062862839},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"81134494ff0134c0dae1b3815caf6606fccd4e46","modified":1555062862841},{"_id":"themes/next/scripts/tags/note.js","hash":"1fdf4f95810fdb983bfd5ad4c4f13fedd4ea2f8d","modified":1555062862843},{"_id":"themes/next/scripts/tags/pdf.js","hash":"ab995f0fc60d60f637220e2651111b775b8a06de","modified":1555062862845},{"_id":"themes/next/scripts/tags/tabs.js","hash":"72a5adbd8f300bee1d0c289367598ca06b2bed17","modified":1555062862846},{"_id":"themes/next/scripts/tags/video.js","hash":"944293fec96e568d9b09bc1280d5dbc9ee1bbd17","modified":1555062862848},{"_id":"themes/next/source/css/main.styl","hash":"5e7d28bc539e84f8b03e68df82292f7fc0f2d023","modified":1555062863107},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1555062863110},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1555062863112},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1555062863113},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1555062863115},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1555062863117},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1555062863118},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1555062863120},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1555062863121},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1555062863123},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1555062863124},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1555062863126},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1555062863128},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1555062863130},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1555062863132},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1555062863133},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1555062863135},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1555062863136},{"_id":"themes/next/source/images/searchicon.png","hash":"025d64ba0160a3a2257dd2b3032b5f7c9dd9b82b","modified":1555062863138},{"_id":"themes/next/source/js/affix.js","hash":"ad343aa406fd8181b5f310434817ce98fc2219e3","modified":1555062863140},{"_id":"themes/next/source/js/algolia-search.js","hash":"84906eeae57bd06744dd20160b93eacf658f97e2","modified":1555062863141},{"_id":"themes/next/source/js/exturl.js","hash":"c48aa4b3c0e578a807fd3661e6cd4f3890777437","modified":1555062863143},{"_id":"themes/next/source/js/js.cookie.js","hash":"f11e84def0352b7dd6393f1b83e55a40ab468686","modified":1555062863147},{"_id":"themes/next/source/js/motion.js","hash":"d0a6d9dbcc57159e54bbb1f683b86632ae0b78f0","modified":1555062863149},{"_id":"themes/next/source/js/next-boot.js","hash":"696a0c2cf158001576d56b48195ec8e39e835b47","modified":1555062863150},{"_id":"themes/next/source/js/post-details.js","hash":"7d309b771e86c7e22ce11cc25625481ef7d5985c","modified":1555062863152},{"_id":"themes/next/source/js/scroll-cookie.js","hash":"c4867626afab749404daf321367f9b6b8e223f69","modified":1555062863157},{"_id":"themes/next/source/js/scrollspy.js","hash":"68d3690152c89e7adb08bb35ec28dbda2bd93686","modified":1555062863159},{"_id":"themes/next/source/js/utils.js","hash":"d58033a6a108981c81ac58ee321167047d7a25df","modified":1555062863161},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1555062863028},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1555062863029},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1555062863035},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1555062863099},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1555062863104},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"4eb8e222dc337211efb0d3bbdb5e29af3e6ecdb8","modified":1555062862660},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"25aea3d764b952f3f6d28ab86d7212d138e892df","modified":1555062862661},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"b57bf9c865bed0f22157176a8085de168a1aef77","modified":1555062862676},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"fd079a414ca0f42f4cddd00247a9d5a5f58c4d8e","modified":1555062862678},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"466e69a4b4fbdc57f33e60a16b0d87e494385e21","modified":1555062862679},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"03f669356bbaa70144b743f3312178e1981ac3a8","modified":1555062862681},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"c909f6e96373c151dea325bcddfdd8c9522421b6","modified":1555062862683},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"39c4ad0e36b7c1260da98ba345f7bd72a2ac0f2e","modified":1555062862684},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"e015c7d9b84062b60b15b36be3ef11929dd10943","modified":1555062862686},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"2b905ddd5dea8558c3fd95aacad241da6b6800f4","modified":1555062862688},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"f46699a9daa5fef599733cbab35cb75cf7a05444","modified":1555062862690},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"be6683db6a269d83bb0441d7cf74db63a240fa8a","modified":1555062862697},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f331ad02beea8990066d32ad6ec9f859672c3615","modified":1555062862699},{"_id":"themes/next/layout/_partials/post/reward.swig","hash":"f62b801c7999da67b4bdca9c5e373b9b5ed039dc","modified":1555062862700},{"_id":"themes/next/layout/_partials/post/wechat-subscriber.swig","hash":"fb7727e8ec63a58238a7206bf70eb273c8879993","modified":1555062862702},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1555062862705},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"f14e9e8c27af82f1bfe794e252dec0d7e521f503","modified":1555062862706},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1555062862708},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"31245e09ce0465b994cebd94223a531585c4eab4","modified":1555062862710},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"c609097b95eb6127c2784f47f2230e6e6efc0be2","modified":1555062862712},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"54b43d406cf37932e7b60f46814e864d31b1842c","modified":1555062862713},{"_id":"themes/next/layout/_partials/share/likely.swig","hash":"647e8677d1ccfb3f7918dd3ea2ff7078504a845d","modified":1555062862715},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"cf87ab778618a32119ec1c4ac2079a51385b1913","modified":1555062862724},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a62c93f19429f159bcf0c2e533ffc619aa399755","modified":1555062862726},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"3c548934b97cc426544947f7a2ae35c270b5e33f","modified":1555062862728},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7ef07edd2a97a3774229990d2f0a6eefa31bd015","modified":1555062862729},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"828eb9c47f34090c841a2e9a0b3f31b0e4ccf40a","modified":1555062862731},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"66d562b3778dbc839f7c00103bd0099c5d61602a","modified":1555062862737},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"83dd7df11b100bae38c9faab9a478f92149a0315","modified":1555062862739},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"73576c9683d9ad9b124916dc6c660607fe7cc1fa","modified":1555062862741},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"2e1de38f44af00209129d4051b7ae307cb11ad68","modified":1555062862742},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"335005a9f8b36349f0ad0a7beeba6969c55fc7f7","modified":1555062862744},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"53202062267391353d49f269e7eb74eb87d30921","modified":1555062862745},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"8ab040fccba41675bc835973515530af8a51f8bd","modified":1555062862747},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"54d7993ae773573ee103c22802b7e98b193e1a3a","modified":1555062862748},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"623e73bedef067ac24a398ef27c8197295da872d","modified":1555062862750},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"39928f358dd13d9fc1a4641800e57be157ecd815","modified":1555062862751},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"71fb01bcad43bc9410ab19190373b9f7e59215b5","modified":1555062862753},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"d18c87d7839e7407e39acd2998bcc9e0b34611b0","modified":1555062862754},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"a22d1ea29a5ffe46199ab7d108a291a05af8d5b6","modified":1555062862756},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"4cff8bf5c42c62f7f0ac1f0d70f839dae39ba77a","modified":1555062862757},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"bc3fc9d053b3d1fc0cd3918bf9a629a6f38f6414","modified":1555062862765},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"d685df1516cb138d7a83bac5d7878a1e0fa8bc04","modified":1555062862767},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"8b4a94dd80b3bac7c5390c8a7fd377b88c2cb78e","modified":1555062862768},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"4e86e1ace90a70bb8862f5e6de9dbe7bfc046bee","modified":1555062862770},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"9a4923d2aa5182531ea7a7fb9abe824450026208","modified":1555062862771},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"b3818fd0b3028dadf341b6d0b180e1243683de6a","modified":1555062862773},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"1a5d94f5779a2ce13abc886dd78e0617f89c34b9","modified":1555062862774},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"1b72c755101c9dfb85da13df9a0abccf37cd1dd2","modified":1555062862776},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"43a20fa0e9ae2f4254f04813f9c619dd36b49ae5","modified":1555062862779},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"ea1c136f960667a0a13b334db497b9b19c41f629","modified":1555062862781},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"767ba29f258db5d2e5baf875a6f36ac1d44df6a3","modified":1555062862783},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"078bd2d5815eb23e8c5f74467dc0042babea00ae","modified":1555062862799},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"143ef265c96a8ea2fb93c36c5ffb9c5e940f7693","modified":1555062862797},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"d45ca53af17d1d83fd27f8ed0917a72f0060e1a9","modified":1555062862800},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1555062863025},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1555062863027},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"1aabac9e37a8f4451c86d09037b3a1f8b30eaf5e","modified":1555062863032},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"21a14a19149f1cb8e011c477f29dd1352675605b","modified":1555062863034},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"e9b0752f08398709e787546a246baca12b4c557f","modified":1555062863096},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1555062863098},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"da7049f3d9a157abe0ecc62611edcf43605ba84d","modified":1555062863101},{"_id":"themes/next/source/css/_variables/base.styl","hash":"ebc95eeb8966d17cdc7dd0de009deaef1fe65064","modified":1555062863103},{"_id":"themes/next/source/js/schemes/muse.js","hash":"ccc0c5cd4ec6f8159c98990ad83f11a5c0b0234c","modified":1555062863154},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"3eea56cc9ce47bb4760930c4c69cebf847a7fbb2","modified":1555062863156},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1555062863166},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1555062863164},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1555062863167},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1555062863169},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1555062863171},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1555062863197},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1555062863199},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1555062863200},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1555062863190},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"5c0ca7f801859cff254d2f5b7d1a70d66ff61a8d","modified":1555062862852},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"463817cbbd804ce134cb3e7e721431cb0e1616f2","modified":1555062862853},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"9fd526db0527c71243f05e18086f937dc67b1c3e","modified":1555062862855},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1555062862857},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"997058180065d986e05df72992cc2cbfd7febd7e","modified":1555062862859},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"a4c6ee546a94fd69e5b7a1e4c054ab8cacb73d2a","modified":1555062862894},{"_id":"themes/next/source/css/_common/components/rainbow.styl","hash":"cfa64bd8ee2ff9f943673e339d69341e76fbf031","modified":1555062862925},{"_id":"themes/next/source/css/_common/components/scrollbar.styl","hash":"afdd21533db18d846e1a2663b1199761b1bd2c1e","modified":1555062862927},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"1a4ac0d119f2126ef8951897338706edce112235","modified":1555062863000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"40144394fdfe05d400f39f6763f66f75479a2e34","modified":1555062863002},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"35c6fd7eab3779bd9e38b7ba8825ab0c67a1be7a","modified":1555062863004},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"1d21dbfdaca5cdf73ba84f7e6d37ca329c0cf3bd","modified":1555062863018},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"fec36a14080104b5862e9f021eab117d87c5f7c5","modified":1555062863020},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1555062863021},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"107f42aa590ec4ba0765a0bc5d735f0f09edc0ff","modified":1555062863023},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"a609ff811f2b2764f5470236fe2fb1f3aa6ccba5","modified":1555062863038},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"d0e9065b0dbbc01811259f0597d1790268b4881b","modified":1555062863041},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"8da8416213127595dfc4d2b358639194647e7bd3","modified":1555062863045},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1555062863048},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"40f266e24af4dedc9497056ab18ebcfda38dd47d","modified":1555062863050},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"06d9d00257abd28414ec0b746f866bf9911cf5ec","modified":1555062863052},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"6aee54cd5a20181e18596565356bd54c66e33823","modified":1555062863054},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"25f05ed8da68d034dce7f06e0f20f6cd55841070","modified":1555062863056},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"04706657af638f2746ae59520e6fc78577c7682c","modified":1555062863067},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"157e6915dcf5990566e463acffa71043b2651c07","modified":1555062863069},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"234b44cfd03f9c9e3e179ff5fd698ac876341913","modified":1555062863071},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"6aee54cd5a20181e18596565356bd54c66e33823","modified":1555062863077},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1555062863078},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"b9619c9827f969ca2e2f5878552362a7b858918f","modified":1555062863083},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"e73d6da74c5755442e831d8fd7d922c5b32bd892","modified":1555062863085},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"0b3001909f3446843b226030524ea8498d4d8997","modified":1555062863087},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"5b5e0a02a7bf63de9efcd33a4e482939cce5822d","modified":1555062863089},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"0d6f0df798449b710e1e5dbd43d470089b2a3c95","modified":1555062863091},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"adb7379f3b9001840eb38b260434e89365771a81","modified":1555062863093},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1555062863174},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1555062863176},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1555062863178},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1555062863185},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1555062863187},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1555062863194},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"2df409df04fdb52d7234876a9f6e502edd4e3929","modified":1555062862862},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"a8f4d4b86acaa34c99111b2dde5d0779cc7e0de6","modified":1555062862864},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"c9cfb4b99e1ec8ec9cf075cb761b8f7fa5fe63fd","modified":1555062862866},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1555062862867},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"33200f60bd6a8bbfc66dd49a239bcc75c2f564c1","modified":1555062862869},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"b8647d6140141b0a160607f6353e4d4594cca92e","modified":1555062862871},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"3a0efe849587b34f20d4e260028dc799215b0bb3","modified":1555062862873},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"024e8ff40ca881c6fbf45712897e22f58a3811ab","modified":1555062862875},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"9c1a082e6c1f96187a099c3f4cb5424c0c9fd06e","modified":1555062862878},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1555062862880},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"e5a5f8747fdf2ca960e4e73c081b8952afd62224","modified":1555062862882},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fa1cea6fcc3f552d57cc7d28380a304859139bf6","modified":1555062862884},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1555062862886},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"9a8fb61bd2d184de9d206e62ba8961d1845c5669","modified":1555062862888},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1555062862889},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"c27527cdeb9e3a9f447f7238f442a5dc33fde4e6","modified":1555062862891},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"c97c819a65f6967485184399397601e5133deda6","modified":1555062862892},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"f3b0d259e991ac86454ae5eac6bc94dc8691d8c9","modified":1555062862898},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1555062862896},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"fc94dd09b4245143b452d6cf2fc4c12134d99d6d","modified":1555062862900},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a73346f999b31355075cd58637946a8950cf6f7e","modified":1555062862902},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"f14cefc99309934d4103a3aa785e1258d858813f","modified":1555062862903},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"b6a241626783d2ac115d683fd59ec283af68e5bb","modified":1555062862905},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d77f85d3af2d7090d84b28ab01c6a49f92eec647","modified":1555062862907},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"13d365ee626c01f17ec664b3f54f51d8b9ee7cf4","modified":1555062862908},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"4aad8e36178faaa71a767af0084d578df4c09f73","modified":1555062862910},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ccd0b1309acff0c676fdcc848a8ae2d05f0369ab","modified":1555062862912},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1555062862914},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1555062862916},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"539fc0880b2e035e8316d5d4b423703195c1b7ba","modified":1555062862917},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"c8009fd9598a661b7d23158b5121b6ac266939e9","modified":1555062862919},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"981795aad232c8bd3f52a0ed8720db696d18a234","modified":1555062862921},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"615fca7dff197a2ca3df674cf963ce70b8525985","modified":1555062862923},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"a5484d8436b2b7862faf6e7309a9e7b88cdd0027","modified":1555062862930},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"ab1776c5dc537beabb0ab81a0f04e08bebad070b","modified":1555062862931},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"03a4e75e963e3e7cc393d588b1495a88d52e0e40","modified":1555062862933},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-button.styl","hash":"b36eea093bd4b32056b5de6f370ff57e50b25a49","modified":1555062862936},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"e58bb8b7127aa21e8260493a425ec00fcb25d338","modified":1555062862938},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"7e2ba73073daaea0a18c3d67ff137dd683af7011","modified":1555062862940},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"9204c79c05d620ecd5d411cdf11e27441b6281dc","modified":1555062862942},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"0eadef0381f696de7f88d7dc5f0ddc3cd5d309b3","modified":1555062862944},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"3cb387fa70017f3c24a1a1884461d29deda54585","modified":1555062862946},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"ed3a2960ebce7396d1893bb8e08c99c7d9259140","modified":1555062862948},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"fde59300ec38868676ff5ed495b9dc9b02d07ffc","modified":1555062862950},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"2d58ad90f148e845bc7023751a7a13260600f8d6","modified":1555062862952},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1555062862965},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"b43421291bf85b589e8d0ec853e238d36ab80631","modified":1555062862967},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"020fac447d7a17c03e2802f0f724ae0738088354","modified":1555062862969},{"_id":"themes/next/source/css/_common/components/tags/pdf.styl","hash":"3baeeb51cfe123e99235ee1816d0e1f6a97c7852","modified":1555062862972},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"54c5398c7bf5b8bd9f38a9ece1dd82a9255f9a30","modified":1555062862974},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"da7a21f5a2f7dcf4c5a4788d7670159ca4132b65","modified":1555062862976},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"4305813408a1cd6aba764a7769b94b081d383d4f","modified":1555062862979},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"a01484e350ad5fc9b1fdfbfafb2ddd9687ad4d20","modified":1555062862984},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"2fbe52f955da41c7a14eb09918bf86a252e4504f","modified":1555062862987},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"2a1008f1044b450b806adc166754ba9513e68375","modified":1555062862988},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"ed8a12982c0497eeb9d7642781abeb801428f83d","modified":1555062862990},{"_id":"themes/next/source/css/_common/components/third-party/copy-code.styl","hash":"d9c244b1c3a09a7fccd3c3f732e6fb112a8cd565","modified":1555062862981},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"6880467b4f6d7b057fb8291aa10966429a0a3bff","modified":1555062862992},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"35dc9f3990fadff3ea038d4e8ac75923219886ed","modified":1555062862994},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"9801977a23268e36c5deefd270423f6f1a0c3bb2","modified":1555062862996},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"7cf42f96ba6b249c75e00dad251ebacf7de61e6c","modified":1555062862997},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1555062863061},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1555062863063},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1555062863081},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1555062863183},{"_id":"source/polaris-images/avatar/avatar.png","hash":"787b2636a5007326949962823e560993e777fde9","modified":1556266257062},{"_id":"source/_posts/docker基础.md","hash":"176c05796aa88c08a36837d7c169c79338d0b145","modified":1557230121651},{"_id":"source/_posts/keepalived笔记.md","hash":"76e4bdc853f5a26dfa189232b8d68f4e6ff3ad57","modified":1557229696908},{"_id":"source/_posts/mongodb基础.md","hash":"29a4260a2869d8e4f350af1996b8c0851a1f40e6","modified":1557230063509}],"Category":[{"name":"技术","_id":"cjuxqcicc0005dwmdsmwxz0bk"},{"name":"文学","_id":"cjuxqcicz000bdwmdfgtmjg38"}],"Data":[],"Page":[{"title":"文章分类","date":"2019-04-26T07:02:54.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 文章分类\ndate: 2019-04-26 15:02:54\ntype: \"categories\"\n---\n","updated":"2019-04-26T07:42:29.412Z","path":"categories/index.html","_id":"cjuxqcibl0001dwmdriwnpq55","comments":1,"layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2019-04-26T07:03:18.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2019-04-26 15:03:18\ntype: \"tags\"\n---\n","updated":"2019-04-26T07:42:59.171Z","path":"tags/index.html","_id":"cjuxqciby0003dwmd9j1dvkyr","comments":1,"layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2018-04-04T05:39:15.116Z","updated":"2019-05-07T10:51:07.146Z","_id":"cjuxqcib90000dwmd3ej8rpqq","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"linux初级","date":"2017-04-26T03:32:30.000Z","_content":"\n#####基本环境：\ncentos7、centos6.5\n\ndeb后缀的软件包是for Debian系的（包括Ubuntu），不是给centos安装的。\nrpm后缀的软件包才是for Redhat系的（包括CentOS）。\n\n如果想安装deb包，要安装dpkg命令~\n或者是用alien把.deb转化为rpm，然后运行~\nyum是操作源组（里面各种官方程序），而rpm是操作自己的rpm包（自己下载过来的）\n\n#####坑一\n直接从windows拖到vm可能会导致文件缩小（丢失信息）\n#####坑二\n使用rpm可能需要依赖包，使用yum安装（yum search ***:查询***的yum源）\n#####坑三\n如果你的linux采用最小安装（没有图形界面等等），很多命令是默认没有安装的，所以你使用坑二或是在线下载的方式，结果各种错误，此时就需要注意你的网络试试：ip addr；发现你的ip并没有分配，service network start; 开启网络吧!(记得修改配置文件ONBOOT=yes--开机启动网络)\n接着yum search \\*，查询到位置后，yum install \\*。(有的命令需要updatedb,比如locate)\n\n#####坑四\n突然有天别人告诉我，所有账户都登录不上（包括root），后来直接通过阿里的控制台登录成功，然后查看原因\n一般远程登录不上，先检查端口22(负责远程连接的端口),发现root权限竟然无法开放和关闭端口，脚本的所有权已被修改，而且每个文件的所有权都属于某用户，原来他误操作(chmod *** /)，当时他没发现可怕的事情，也就没放在心上；之后就炸了。\n把所有的文件属性都改为root，然后单独修改每个账户的文件夹（包括子文件夹）的权限 (-R：递归修改 子文件)\nchmod -R /  权限修改\nchgrp 权限组修改\nchown -R tangyb.bxGroup ./polaris 修改文件属性（权限、组等等）\n\n\n#####坑五\n个别用户登录不上（显示建立连接通道，然后就和卡机了一样），查看登录日志（文件：/var/log/secure），发现错误，此用户的进程数过多（默认是1024） ，提升进程数（文件：90-nproc.conf）或是关闭此用户下的进程（pkill -u username）。\n\n#####坑六\n突然某天vm不能远程了\n主机不能ping通vm，vm可以ping通主机并且可以上网（采用的nat模式）\n后改为桥接模式，主机可以连接但是vm无法上网（公司绑定了mac地址）,尴尬！\n因为以前是可以的，所以不存在网上说的nat不能被远程的情况，仔细想想公司是以10开头的网络，而vm是192开头，根本就不在一个网段,那么原来是怎么通信的？\n后来查了下是和两个虚拟网卡有关vmnet1和vmnet8\n一个是设置私有网络（Host Only）时，用来和主机通信的，禁用以后就无法正常使用Host-Only模式了，另一个是设置网络地址翻译（NAT）时，和主机通讯使用的。\n而我上次直接禁用了这两个，如果你只是远程vm，只需打开vmnet8.\n\n#####坑七\n（自家wifi）\nA、vm中新建的centos7无法连接网络（桥接模式，没有复制物理网络连接状态），后来ping宿主ip出现network is unreachable（网络不可达）也没有ifcfg-eth0文件（cent7貌似都没有），直接修改ifcfg-eno167777736文件，改为ONBOOT=yes（开机启动此配置），然后service network start。 ok！搞定\nB、如果 NAT也存在上面的问题unreachable，首页查看宿主机器的默认网关，接着将v8的网关改为一致即可（或是.2，.1）。\n\n在公司的时候，宿主机器的ip和mac是绑定的，NAT模式是可以的。(有的时候会有问题)，主要就是这个网关IP的原因。也可以使用桥接，指定宿主机器的物理网卡\nps:桥接相当于你的兄弟机器，大家在一个网段；NAT相当于宿主机器做为路由，虚拟机做为局域网中的一台机器（所以IP为192.168**）。\n\n\n<img src=\"http://upload-images.jianshu.io/upload_images/3650492-b77ea2470a92bb8b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"/>\n###常识\n#####1、下载***.sh文件，并直接运行，会下载相关组件及软件（如google浏览器）\n  rpm 文件：rpm -ivh **.rpm\n(rpm安装后有些需要yum 真正安装软件及其依赖)\n\n#####2、解压文件\n  cp -r 源位置 目标位置\n  tar -xvf **.tar.gz  (-v/x:压缩/解压，-v:详细过程，-f:输出/输入文件)\n\n#####3、循环删除此目录及子文件、文件夹：rm -rf ****\n\n4.默认安装路径：usr/java\n   环境配置： etc/profile\n   通过export只是临时性，需要在profile加上路径，然后source /etc/profile使环境立即生效\n\n#####5、查询安装了哪些jdk\n  rpm -qa|grep jdk\n\n#####6、卸载相应jdk版本\nrpm -qa | grep java #查询\nrpm -e --nodeps **** #卸载相关版本\n（找不到openjdksource可以：yum -y remove java **）--貌似没用，先备着(只是删除软件包)\n\n#####7、文件属性\n　 r 表示文件可以被读（read）\n　　w 表示文件可以被写（write）\n　　x 表示文件可以被执行（如果它是程序的话）\n　　其中：rwx也可以用数字来代替\n　　r  ------------4\n　　w ------------2\n　　x ------------1\n　　- ------------0\n-rw-r--r-- (644) 只有所有者才有读和写的权限，组群和其他人只有读的权限\n4755：drwsr-xr-s d:文件类型（目录文件） d/rws/r-x/r-x\n这个4表示其他用户执行文件时，具有与所有者相当的权限,所以写成rws（原本是rwx）\n\n\n#####8、wget 下载想要的rpm或是其他文件\n\n#####9、sudoers文件的作用是 控制用户可以执行哪些指令\n\n#####10、开放3306端口（新安装的mysql可能无法远程，如果用户表已经赋权好了，远程连接报10038错误）\nfirewall-cmd --zone=public --add-port=3306/tcp --permanent #开放3306\nfirewall-cmd --reload #在不改变状态的条件下重新加载防火墙\n上面的指令完全ok，下面的备用\nsystemctl stop firewalld.service #停止\nsystemctl disable firewalld.service #禁用\n（centos6.5 service iptables stop）\n神坑：直接stop防火墙，依旧访问不了，必须要先开发端口\n\n#####11、vi编辑器\ngg:第一行\nG：最后一行\nctrl+b:上翻一页\nctrl+f:下翻一页 \n\n/* 从光标开始处向文件尾搜索\n?* 从光标开始处向文件首搜索\nn：在同一方向重复上一次搜索命令(/?的方向决定方向)\n\nshift+v:块选择\nyy:块复制\ndd:剪切当前行\np:粘贴\n\n#####12、epel-release\n安装docker的时候看教程需要安装epel-release包，我记得以前安装过，查询之后才知道这是第三库源，里面有很多程序方便下载而且很多扩展包比官网更新较快（官方以稳定为主）。\nyum install docker（centos7下直接安装，不同版本会不同）\n\n\n#####13、进程操作\nctrl-c 发送 SIGINT 信号给前台进程组中的所有进程。常用于终止正在运行的程序。\nctrl-z 发送 SIGTSTP 信号给前台进程组中的所有进程，常用于挂起一个进程\n\ncrtl+z 将进程挂起，然后fg/bg把刚刚挂在的程序放在前台/后台运行\n\n#####14、查看版本\n系统版本：cat  /etc/redhat-release\n内核版本：uname -r\n\n#####15、查看端口占用\nps -anp |grep 8080\n\n#####16、golang的install是默认在/usr/local/bin/ 如果想自己配置，需要在profile添加指定路径。\nexport GOROOT=/usr/tangyb/go\nexport GOPATH=$PATH:$GOROOT/bin\n\n#####17、设置tomcat的https\na）生成文件 jdk1.7.0_79/bin/keytool -genkey -alias polaris -keyalg RSA -keystore ./polaris.keystore \nb）导出证书 jdk1.7.0_79/bin/keytool  -export -alias polaris -keystore ./polaris.keystore -storepass ******* -rfc -file polaris.cer\nc) 在server.xml文件的ssl/tls端口 加入keystoreFile=\"/usr/baxia/users/tangyb/tomcat_https/polaris.keystore\" keystorePass=\"huoying3138266\"\n****一定要记得在输入name的时候是写入 网站域名，否则会出现无法通过身份验证的红叉\n参考文章http://www.cnblogs.com/green-hand/p/6514597.html\n\n\n\n#####18、rm命令的修改（改为mv） 及 定时清除文件\nrm更改\na、创建回收站，存放删除的文件\nb、创建mv脚本文件\nc、在bashrc将rm捕获并改为调用mv脚本\nd、定时清除回收站的文件\n\n用户级别：\ncrontab -e 编辑crontab定时文件\ncrontab -l 查看明细列表（不包括系统级别的）\nservice crond restart 重启crontab的服务\n\n系统级别：\n/etc/crontab ##注意格式，需要添加指定用户\n\n所有的crontab的执行过程 都可以在 /var/log/cron 查看\n(如果任务执行了，没有结果，多注意权限、任务本身等等)\n\n\nprofile：登录会读取\nbashrc：每次执行bash会读取\n\n/etc/profile与/etc/bashrc的区别  \n前一个主要用来设置一些系统变量,比如JAVA_HOME等等,后面一个主要用来保存一些bash的设置.   \n/etc/profile:此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行. \n并从/etc/profile.d目录的配置文件中搜集shell的设置.  \n/etc/bashrc:为每一个运行bash shell的用户执行此文件.当bash shell被打开时,该文件被读取.  \n~/.bash_profile:每个用户都可使用该文件输入专用于自己使用的shell信息,当用户登录时,该  \n文件仅仅执行一次!默认情况下,他设置一些环境变量,执行用户的.bashrc文件.  \n~/.bashrc:该文件包含专用于你的bash shell的bash信息,当登录时以及每次打开新的shell时,该  \n该文件被读取.  \n~/.bash_logout:当每次退出系统(退出bash shell)时,执行该文件.\n\n/etc/下的很多文件都是系统级别的\n比如crontab、bashrc、profile（相当于全局）\n而这些文件 每个用户也会 单独拥有\n\n#####19、locate\nlocate速度很快，是因为有一个检索库，所以用之前最好updatedb下\n\n#####20、邮件，广播等\nw: 查看在线账户\nwall: 群发消息\nwrite: 个人私发\nmail： 邮件发送\n\n#####21、VMware Tools安装（转载：http://www.epinv.com/post/5217.html）\n虚拟机-安装VMware Tools\nmkdir /media/mnt    #新建挂载目录\nmount /dev/cdrom    /media/mnt/      #挂载VMware Tools安装盘到/media/mnt/目录\n可以移动到安装目录在解压安装\ntar zxvf VMwareTools-9.6.2-1688356.tar.gz #解压\n./vmware-install.pl  #安装\n成功后重启服务器\n\n#####22、系统监控\n空间大小：du -sm ./logs/   （s:指定的目录，m：按照MB来显示大小）\n日志ERROR高亮：tail -f xxx.log | perl -pe 's/(ERROR)/\\e[1;31m$1\\e[0m/g'\n\n#####23. 集群网络基本配置（centos 7）\na. 设置静态ip(NAT模式)\n修改配置文件 /etc/sysconfig/network-scripts/ifcfg-eno16777736\nBOOTPROTO=static ##默认dhcp，改为静态分配\nONBOOT=yes  ##自启动，默认no\nIPADDR=192.168.118.129   ##ip地址，其中192.168.118和NAT模式的子网IP相同 \nGATEWAY=192.168.118.2   ##网关，和NAT模式设置的网关相同\nNETMASK=255.255.255.0   \nDNS1=192.168.118.2     ##和网关相同 或是 114.114.114.114（电信的DNS）或是223.5.5.5（阿里），可在NAT模式菜单中修改\n\nservice network start 重启ok, ping百度测试\n\nb. 端口开放\nfirewall-cmd --zone=public --add-port=3306/tcp --permanent #永久开放3306\nfirewall-cmd --reload #重新加载防火墙规则\nsystemctl stop firewalld.service #停止\nsystemctl disable firewalld.service #禁用\n\n#####24.集群资源共享\n采用scp传送，之前需要准备ssh免密登录\nscp -r 源文件夹  username@ip(或者映射名):目标文件夹\n-r：传输文件夹\n","source":"_posts/Linux初阶.md","raw":"---\ntitle: linux初级\ndate: 2017-04-26 11:32:30\ntags:\n- linux\ncategories:\n- 技术\n---\n\n#####基本环境：\ncentos7、centos6.5\n\ndeb后缀的软件包是for Debian系的（包括Ubuntu），不是给centos安装的。\nrpm后缀的软件包才是for Redhat系的（包括CentOS）。\n\n如果想安装deb包，要安装dpkg命令~\n或者是用alien把.deb转化为rpm，然后运行~\nyum是操作源组（里面各种官方程序），而rpm是操作自己的rpm包（自己下载过来的）\n\n#####坑一\n直接从windows拖到vm可能会导致文件缩小（丢失信息）\n#####坑二\n使用rpm可能需要依赖包，使用yum安装（yum search ***:查询***的yum源）\n#####坑三\n如果你的linux采用最小安装（没有图形界面等等），很多命令是默认没有安装的，所以你使用坑二或是在线下载的方式，结果各种错误，此时就需要注意你的网络试试：ip addr；发现你的ip并没有分配，service network start; 开启网络吧!(记得修改配置文件ONBOOT=yes--开机启动网络)\n接着yum search \\*，查询到位置后，yum install \\*。(有的命令需要updatedb,比如locate)\n\n#####坑四\n突然有天别人告诉我，所有账户都登录不上（包括root），后来直接通过阿里的控制台登录成功，然后查看原因\n一般远程登录不上，先检查端口22(负责远程连接的端口),发现root权限竟然无法开放和关闭端口，脚本的所有权已被修改，而且每个文件的所有权都属于某用户，原来他误操作(chmod *** /)，当时他没发现可怕的事情，也就没放在心上；之后就炸了。\n把所有的文件属性都改为root，然后单独修改每个账户的文件夹（包括子文件夹）的权限 (-R：递归修改 子文件)\nchmod -R /  权限修改\nchgrp 权限组修改\nchown -R tangyb.bxGroup ./polaris 修改文件属性（权限、组等等）\n\n\n#####坑五\n个别用户登录不上（显示建立连接通道，然后就和卡机了一样），查看登录日志（文件：/var/log/secure），发现错误，此用户的进程数过多（默认是1024） ，提升进程数（文件：90-nproc.conf）或是关闭此用户下的进程（pkill -u username）。\n\n#####坑六\n突然某天vm不能远程了\n主机不能ping通vm，vm可以ping通主机并且可以上网（采用的nat模式）\n后改为桥接模式，主机可以连接但是vm无法上网（公司绑定了mac地址）,尴尬！\n因为以前是可以的，所以不存在网上说的nat不能被远程的情况，仔细想想公司是以10开头的网络，而vm是192开头，根本就不在一个网段,那么原来是怎么通信的？\n后来查了下是和两个虚拟网卡有关vmnet1和vmnet8\n一个是设置私有网络（Host Only）时，用来和主机通信的，禁用以后就无法正常使用Host-Only模式了，另一个是设置网络地址翻译（NAT）时，和主机通讯使用的。\n而我上次直接禁用了这两个，如果你只是远程vm，只需打开vmnet8.\n\n#####坑七\n（自家wifi）\nA、vm中新建的centos7无法连接网络（桥接模式，没有复制物理网络连接状态），后来ping宿主ip出现network is unreachable（网络不可达）也没有ifcfg-eth0文件（cent7貌似都没有），直接修改ifcfg-eno167777736文件，改为ONBOOT=yes（开机启动此配置），然后service network start。 ok！搞定\nB、如果 NAT也存在上面的问题unreachable，首页查看宿主机器的默认网关，接着将v8的网关改为一致即可（或是.2，.1）。\n\n在公司的时候，宿主机器的ip和mac是绑定的，NAT模式是可以的。(有的时候会有问题)，主要就是这个网关IP的原因。也可以使用桥接，指定宿主机器的物理网卡\nps:桥接相当于你的兄弟机器，大家在一个网段；NAT相当于宿主机器做为路由，虚拟机做为局域网中的一台机器（所以IP为192.168**）。\n\n\n<img src=\"http://upload-images.jianshu.io/upload_images/3650492-b77ea2470a92bb8b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"/>\n###常识\n#####1、下载***.sh文件，并直接运行，会下载相关组件及软件（如google浏览器）\n  rpm 文件：rpm -ivh **.rpm\n(rpm安装后有些需要yum 真正安装软件及其依赖)\n\n#####2、解压文件\n  cp -r 源位置 目标位置\n  tar -xvf **.tar.gz  (-v/x:压缩/解压，-v:详细过程，-f:输出/输入文件)\n\n#####3、循环删除此目录及子文件、文件夹：rm -rf ****\n\n4.默认安装路径：usr/java\n   环境配置： etc/profile\n   通过export只是临时性，需要在profile加上路径，然后source /etc/profile使环境立即生效\n\n#####5、查询安装了哪些jdk\n  rpm -qa|grep jdk\n\n#####6、卸载相应jdk版本\nrpm -qa | grep java #查询\nrpm -e --nodeps **** #卸载相关版本\n（找不到openjdksource可以：yum -y remove java **）--貌似没用，先备着(只是删除软件包)\n\n#####7、文件属性\n　 r 表示文件可以被读（read）\n　　w 表示文件可以被写（write）\n　　x 表示文件可以被执行（如果它是程序的话）\n　　其中：rwx也可以用数字来代替\n　　r  ------------4\n　　w ------------2\n　　x ------------1\n　　- ------------0\n-rw-r--r-- (644) 只有所有者才有读和写的权限，组群和其他人只有读的权限\n4755：drwsr-xr-s d:文件类型（目录文件） d/rws/r-x/r-x\n这个4表示其他用户执行文件时，具有与所有者相当的权限,所以写成rws（原本是rwx）\n\n\n#####8、wget 下载想要的rpm或是其他文件\n\n#####9、sudoers文件的作用是 控制用户可以执行哪些指令\n\n#####10、开放3306端口（新安装的mysql可能无法远程，如果用户表已经赋权好了，远程连接报10038错误）\nfirewall-cmd --zone=public --add-port=3306/tcp --permanent #开放3306\nfirewall-cmd --reload #在不改变状态的条件下重新加载防火墙\n上面的指令完全ok，下面的备用\nsystemctl stop firewalld.service #停止\nsystemctl disable firewalld.service #禁用\n（centos6.5 service iptables stop）\n神坑：直接stop防火墙，依旧访问不了，必须要先开发端口\n\n#####11、vi编辑器\ngg:第一行\nG：最后一行\nctrl+b:上翻一页\nctrl+f:下翻一页 \n\n/* 从光标开始处向文件尾搜索\n?* 从光标开始处向文件首搜索\nn：在同一方向重复上一次搜索命令(/?的方向决定方向)\n\nshift+v:块选择\nyy:块复制\ndd:剪切当前行\np:粘贴\n\n#####12、epel-release\n安装docker的时候看教程需要安装epel-release包，我记得以前安装过，查询之后才知道这是第三库源，里面有很多程序方便下载而且很多扩展包比官网更新较快（官方以稳定为主）。\nyum install docker（centos7下直接安装，不同版本会不同）\n\n\n#####13、进程操作\nctrl-c 发送 SIGINT 信号给前台进程组中的所有进程。常用于终止正在运行的程序。\nctrl-z 发送 SIGTSTP 信号给前台进程组中的所有进程，常用于挂起一个进程\n\ncrtl+z 将进程挂起，然后fg/bg把刚刚挂在的程序放在前台/后台运行\n\n#####14、查看版本\n系统版本：cat  /etc/redhat-release\n内核版本：uname -r\n\n#####15、查看端口占用\nps -anp |grep 8080\n\n#####16、golang的install是默认在/usr/local/bin/ 如果想自己配置，需要在profile添加指定路径。\nexport GOROOT=/usr/tangyb/go\nexport GOPATH=$PATH:$GOROOT/bin\n\n#####17、设置tomcat的https\na）生成文件 jdk1.7.0_79/bin/keytool -genkey -alias polaris -keyalg RSA -keystore ./polaris.keystore \nb）导出证书 jdk1.7.0_79/bin/keytool  -export -alias polaris -keystore ./polaris.keystore -storepass ******* -rfc -file polaris.cer\nc) 在server.xml文件的ssl/tls端口 加入keystoreFile=\"/usr/baxia/users/tangyb/tomcat_https/polaris.keystore\" keystorePass=\"huoying3138266\"\n****一定要记得在输入name的时候是写入 网站域名，否则会出现无法通过身份验证的红叉\n参考文章http://www.cnblogs.com/green-hand/p/6514597.html\n\n\n\n#####18、rm命令的修改（改为mv） 及 定时清除文件\nrm更改\na、创建回收站，存放删除的文件\nb、创建mv脚本文件\nc、在bashrc将rm捕获并改为调用mv脚本\nd、定时清除回收站的文件\n\n用户级别：\ncrontab -e 编辑crontab定时文件\ncrontab -l 查看明细列表（不包括系统级别的）\nservice crond restart 重启crontab的服务\n\n系统级别：\n/etc/crontab ##注意格式，需要添加指定用户\n\n所有的crontab的执行过程 都可以在 /var/log/cron 查看\n(如果任务执行了，没有结果，多注意权限、任务本身等等)\n\n\nprofile：登录会读取\nbashrc：每次执行bash会读取\n\n/etc/profile与/etc/bashrc的区别  \n前一个主要用来设置一些系统变量,比如JAVA_HOME等等,后面一个主要用来保存一些bash的设置.   \n/etc/profile:此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行. \n并从/etc/profile.d目录的配置文件中搜集shell的设置.  \n/etc/bashrc:为每一个运行bash shell的用户执行此文件.当bash shell被打开时,该文件被读取.  \n~/.bash_profile:每个用户都可使用该文件输入专用于自己使用的shell信息,当用户登录时,该  \n文件仅仅执行一次!默认情况下,他设置一些环境变量,执行用户的.bashrc文件.  \n~/.bashrc:该文件包含专用于你的bash shell的bash信息,当登录时以及每次打开新的shell时,该  \n该文件被读取.  \n~/.bash_logout:当每次退出系统(退出bash shell)时,执行该文件.\n\n/etc/下的很多文件都是系统级别的\n比如crontab、bashrc、profile（相当于全局）\n而这些文件 每个用户也会 单独拥有\n\n#####19、locate\nlocate速度很快，是因为有一个检索库，所以用之前最好updatedb下\n\n#####20、邮件，广播等\nw: 查看在线账户\nwall: 群发消息\nwrite: 个人私发\nmail： 邮件发送\n\n#####21、VMware Tools安装（转载：http://www.epinv.com/post/5217.html）\n虚拟机-安装VMware Tools\nmkdir /media/mnt    #新建挂载目录\nmount /dev/cdrom    /media/mnt/      #挂载VMware Tools安装盘到/media/mnt/目录\n可以移动到安装目录在解压安装\ntar zxvf VMwareTools-9.6.2-1688356.tar.gz #解压\n./vmware-install.pl  #安装\n成功后重启服务器\n\n#####22、系统监控\n空间大小：du -sm ./logs/   （s:指定的目录，m：按照MB来显示大小）\n日志ERROR高亮：tail -f xxx.log | perl -pe 's/(ERROR)/\\e[1;31m$1\\e[0m/g'\n\n#####23. 集群网络基本配置（centos 7）\na. 设置静态ip(NAT模式)\n修改配置文件 /etc/sysconfig/network-scripts/ifcfg-eno16777736\nBOOTPROTO=static ##默认dhcp，改为静态分配\nONBOOT=yes  ##自启动，默认no\nIPADDR=192.168.118.129   ##ip地址，其中192.168.118和NAT模式的子网IP相同 \nGATEWAY=192.168.118.2   ##网关，和NAT模式设置的网关相同\nNETMASK=255.255.255.0   \nDNS1=192.168.118.2     ##和网关相同 或是 114.114.114.114（电信的DNS）或是223.5.5.5（阿里），可在NAT模式菜单中修改\n\nservice network start 重启ok, ping百度测试\n\nb. 端口开放\nfirewall-cmd --zone=public --add-port=3306/tcp --permanent #永久开放3306\nfirewall-cmd --reload #重新加载防火墙规则\nsystemctl stop firewalld.service #停止\nsystemctl disable firewalld.service #禁用\n\n#####24.集群资源共享\n采用scp传送，之前需要准备ssh免密登录\nscp -r 源文件夹  username@ip(或者映射名):目标文件夹\n-r：传输文件夹\n","slug":"Linux初阶","published":1,"updated":"2019-05-07T10:34:58.461Z","_id":"cjuxqcibr0002dwmdoivcpumz","comments":1,"layout":"post","photos":[],"link":"","content":"<p>#####基本环境：<br>centos7、centos6.5</p>\n<p>deb后缀的软件包是for Debian系的（包括Ubuntu），不是给centos安装的。<br>rpm后缀的软件包才是for Redhat系的（包括CentOS）。</p>\n<p>如果想安装deb包，要安装dpkg命令~<br>或者是用alien把.deb转化为rpm，然后运行~<br>yum是操作源组（里面各种官方程序），而rpm是操作自己的rpm包（自己下载过来的）</p>\n<p>#####坑一<br>直接从windows拖到vm可能会导致文件缩小（丢失信息）</p>\n<p>#####坑二<br>使用rpm可能需要依赖包，使用yum安装（yum search <strong><em>:查询</em></strong>的yum源）</p>\n<p>#####坑三<br>如果你的linux采用最小安装（没有图形界面等等），很多命令是默认没有安装的，所以你使用坑二或是在线下载的方式，结果各种错误，此时就需要注意你的网络试试：ip addr；发现你的ip并没有分配，service network start; 开启网络吧!(记得修改配置文件ONBOOT=yes–开机启动网络)<br>接着yum search *，查询到位置后，yum install *。(有的命令需要updatedb,比如locate)</p>\n<p>#####坑四<br>突然有天别人告诉我，所有账户都登录不上（包括root），后来直接通过阿里的控制台登录成功，然后查看原因<br>一般远程登录不上，先检查端口22(负责远程连接的端口),发现root权限竟然无法开放和关闭端口，脚本的所有权已被修改，而且每个文件的所有权都属于某用户，原来他误操作(chmod *** /)，当时他没发现可怕的事情，也就没放在心上；之后就炸了。<br>把所有的文件属性都改为root，然后单独修改每个账户的文件夹（包括子文件夹）的权限 (-R：递归修改 子文件)<br>chmod -R /  权限修改<br>chgrp 权限组修改<br>chown -R tangyb.bxGroup ./polaris 修改文件属性（权限、组等等）</p>\n<p>#####坑五<br>个别用户登录不上（显示建立连接通道，然后就和卡机了一样），查看登录日志（文件：/var/log/secure），发现错误，此用户的进程数过多（默认是1024） ，提升进程数（文件：90-nproc.conf）或是关闭此用户下的进程（pkill -u username）。</p>\n<p>#####坑六<br>突然某天vm不能远程了<br>主机不能ping通vm，vm可以ping通主机并且可以上网（采用的nat模式）<br>后改为桥接模式，主机可以连接但是vm无法上网（公司绑定了mac地址）,尴尬！<br>因为以前是可以的，所以不存在网上说的nat不能被远程的情况，仔细想想公司是以10开头的网络，而vm是192开头，根本就不在一个网段,那么原来是怎么通信的？<br>后来查了下是和两个虚拟网卡有关vmnet1和vmnet8<br>一个是设置私有网络（Host Only）时，用来和主机通信的，禁用以后就无法正常使用Host-Only模式了，另一个是设置网络地址翻译（NAT）时，和主机通讯使用的。<br>而我上次直接禁用了这两个，如果你只是远程vm，只需打开vmnet8.</p>\n<p>#####坑七<br>（自家wifi）<br>A、vm中新建的centos7无法连接网络（桥接模式，没有复制物理网络连接状态），后来ping宿主ip出现network is unreachable（网络不可达）也没有ifcfg-eth0文件（cent7貌似都没有），直接修改ifcfg-eno167777736文件，改为ONBOOT=yes（开机启动此配置），然后service network start。 ok！搞定<br>B、如果 NAT也存在上面的问题unreachable，首页查看宿主机器的默认网关，接着将v8的网关改为一致即可（或是.2，.1）。</p>\n<p>在公司的时候，宿主机器的ip和mac是绑定的，NAT模式是可以的。(有的时候会有问题)，主要就是这个网关IP的原因。也可以使用桥接，指定宿主机器的物理网卡<br>ps:桥接相当于你的兄弟机器，大家在一个网段；NAT相当于宿主机器做为路由，虚拟机做为局域网中的一台机器（所以IP为192.168**）。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/3650492-b77ea2470a92bb8b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p>###常识</p>\n<p>#####1、下载<strong>*.sh文件，并直接运行，会下载相关组件及软件（如google浏览器）<br>  rpm 文件：rpm -ivh </strong>.rpm<br>(rpm安装后有些需要yum 真正安装软件及其依赖)</p>\n<p>#####2、解压文件<br>  cp -r 源位置 目标位置<br>  tar -xvf **.tar.gz  (-v/x:压缩/解压，-v:详细过程，-f:输出/输入文件)</p>\n<p>#####3、循环删除此目录及子文件、文件夹：rm -rf <em>**</em></p>\n<p>4.默认安装路径：usr/java<br>   环境配置： etc/profile<br>   通过export只是临时性，需要在profile加上路径，然后source /etc/profile使环境立即生效</p>\n<p>#####5、查询安装了哪些jdk<br>  rpm -qa|grep jdk</p>\n<p>#####6、卸载相应jdk版本<br>rpm -qa | grep java #查询<br>rpm -e –nodeps <strong>** #卸载相关版本<br>（找不到openjdksource可以：yum -y remove java </strong>）–貌似没用，先备着(只是删除软件包)</p>\n<p>#####7、文件属性<br>　 r 表示文件可以被读（read）<br>　　w 表示文件可以被写（write）<br>　　x 表示文件可以被执行（如果它是程序的话）<br>　　其中：rwx也可以用数字来代替<br>　　r  ————4<br>　　w ————2<br>　　x ————1<br>　　- ————0<br>-rw-r–r– (644) 只有所有者才有读和写的权限，组群和其他人只有读的权限<br>4755：drwsr-xr-s d:文件类型（目录文件） d/rws/r-x/r-x<br>这个4表示其他用户执行文件时，具有与所有者相当的权限,所以写成rws（原本是rwx）</p>\n<p>#####8、wget 下载想要的rpm或是其他文件</p>\n<p>#####9、sudoers文件的作用是 控制用户可以执行哪些指令</p>\n<p>#####10、开放3306端口（新安装的mysql可能无法远程，如果用户表已经赋权好了，远程连接报10038错误）<br>firewall-cmd –zone=public –add-port=3306/tcp –permanent #开放3306<br>firewall-cmd –reload #在不改变状态的条件下重新加载防火墙<br>上面的指令完全ok，下面的备用<br>systemctl stop firewalld.service #停止<br>systemctl disable firewalld.service #禁用<br>（centos6.5 service iptables stop）<br>神坑：直接stop防火墙，依旧访问不了，必须要先开发端口</p>\n<p>#####11、vi编辑器<br>gg:第一行<br>G：最后一行<br>ctrl+b:上翻一页<br>ctrl+f:下翻一页 </p>\n<p>/<em> 从光标开始处向文件尾搜索<br>?</em> 从光标开始处向文件首搜索<br>n：在同一方向重复上一次搜索命令(/?的方向决定方向)</p>\n<p>shift+v:块选择<br>yy:块复制<br>dd:剪切当前行<br>p:粘贴</p>\n<p>#####12、epel-release<br>安装docker的时候看教程需要安装epel-release包，我记得以前安装过，查询之后才知道这是第三库源，里面有很多程序方便下载而且很多扩展包比官网更新较快（官方以稳定为主）。<br>yum install docker（centos7下直接安装，不同版本会不同）</p>\n<p>#####13、进程操作<br>ctrl-c 发送 SIGINT 信号给前台进程组中的所有进程。常用于终止正在运行的程序。<br>ctrl-z 发送 SIGTSTP 信号给前台进程组中的所有进程，常用于挂起一个进程</p>\n<p>crtl+z 将进程挂起，然后fg/bg把刚刚挂在的程序放在前台/后台运行</p>\n<p>#####14、查看版本<br>系统版本：cat  /etc/redhat-release<br>内核版本：uname -r</p>\n<p>#####15、查看端口占用<br>ps -anp |grep 8080</p>\n<p>#####16、golang的install是默认在/usr/local/bin/ 如果想自己配置，需要在profile添加指定路径。<br>export GOROOT=/usr/tangyb/go<br>export GOPATH=$PATH:$GOROOT/bin</p>\n<p>#####17、设置tomcat的https<br>a）生成文件 jdk1.7.0_79/bin/keytool -genkey -alias polaris -keyalg RSA -keystore ./polaris.keystore<br>b）导出证书 jdk1.7.0_79/bin/keytool  -export -alias polaris -keystore ./polaris.keystore -storepass <strong>***</strong> -rfc -file polaris.cer<br>c) 在server.xml文件的ssl/tls端口 加入keystoreFile=”/usr/baxia/users/tangyb/tomcat_https/polaris.keystore” keystorePass=”huoying3138266”<br><em>**</em>一定要记得在输入name的时候是写入 网站域名，否则会出现无法通过身份验证的红叉<br>参考文章<a href=\"http://www.cnblogs.com/green-hand/p/6514597.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/green-hand/p/6514597.html</a></p>\n<p>#####18、rm命令的修改（改为mv） 及 定时清除文件<br>rm更改<br>a、创建回收站，存放删除的文件<br>b、创建mv脚本文件<br>c、在bashrc将rm捕获并改为调用mv脚本<br>d、定时清除回收站的文件</p>\n<p>用户级别：<br>crontab -e 编辑crontab定时文件<br>crontab -l 查看明细列表（不包括系统级别的）<br>service crond restart 重启crontab的服务</p>\n<p>系统级别：<br>/etc/crontab ##注意格式，需要添加指定用户</p>\n<p>所有的crontab的执行过程 都可以在 /var/log/cron 查看<br>(如果任务执行了，没有结果，多注意权限、任务本身等等)</p>\n<p>profile：登录会读取<br>bashrc：每次执行bash会读取</p>\n<p>/etc/profile与/etc/bashrc的区别<br>前一个主要用来设置一些系统变量,比如JAVA_HOME等等,后面一个主要用来保存一些bash的设置.<br>/etc/profile:此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行.<br>并从/etc/profile.d目录的配置文件中搜集shell的设置.<br>/etc/bashrc:为每一个运行bash shell的用户执行此文件.当bash shell被打开时,该文件被读取.<br>~/.bash_profile:每个用户都可使用该文件输入专用于自己使用的shell信息,当用户登录时,该<br>文件仅仅执行一次!默认情况下,他设置一些环境变量,执行用户的.bashrc文件.<br>~/.bashrc:该文件包含专用于你的bash shell的bash信息,当登录时以及每次打开新的shell时,该<br>该文件被读取.<br>~/.bash_logout:当每次退出系统(退出bash shell)时,执行该文件.</p>\n<p>/etc/下的很多文件都是系统级别的<br>比如crontab、bashrc、profile（相当于全局）<br>而这些文件 每个用户也会 单独拥有</p>\n<p>#####19、locate<br>locate速度很快，是因为有一个检索库，所以用之前最好updatedb下</p>\n<p>#####20、邮件，广播等<br>w: 查看在线账户<br>wall: 群发消息<br>write: 个人私发<br>mail： 邮件发送</p>\n<p>#####21、VMware Tools安装（转载：<a href=\"http://www.epinv.com/post/5217.html）\" target=\"_blank\" rel=\"noopener\">http://www.epinv.com/post/5217.html）</a><br>虚拟机-安装VMware Tools<br>mkdir /media/mnt    #新建挂载目录<br>mount /dev/cdrom    /media/mnt/      #挂载VMware Tools安装盘到/media/mnt/目录<br>可以移动到安装目录在解压安装<br>tar zxvf VMwareTools-9.6.2-1688356.tar.gz #解压<br>./vmware-install.pl  #安装<br>成功后重启服务器</p>\n<p>#####22、系统监控<br>空间大小：du -sm ./logs/   （s:指定的目录，m：按照MB来显示大小）<br>日志ERROR高亮：tail -f xxx.log | perl -pe ‘s/(ERROR)/\\e[1;31m$1\\e[0m/g’</p>\n<p>#####23. 集群网络基本配置（centos 7）<br>a. 设置静态ip(NAT模式)<br>修改配置文件 /etc/sysconfig/network-scripts/ifcfg-eno16777736<br>BOOTPROTO=static ##默认dhcp，改为静态分配<br>ONBOOT=yes  ##自启动，默认no<br>IPADDR=192.168.118.129   ##ip地址，其中192.168.118和NAT模式的子网IP相同<br>GATEWAY=192.168.118.2   ##网关，和NAT模式设置的网关相同<br>NETMASK=255.255.255.0<br>DNS1=192.168.118.2     ##和网关相同 或是 114.114.114.114（电信的DNS）或是223.5.5.5（阿里），可在NAT模式菜单中修改</p>\n<p>service network start 重启ok, ping百度测试</p>\n<p>b. 端口开放<br>firewall-cmd –zone=public –add-port=3306/tcp –permanent #永久开放3306<br>firewall-cmd –reload #重新加载防火墙规则<br>systemctl stop firewalld.service #停止<br>systemctl disable firewalld.service #禁用</p>\n<p>#####24.集群资源共享<br>采用scp传送，之前需要准备ssh免密登录<br>scp -r 源文件夹  username@ip(或者映射名):目标文件夹<br>-r：传输文件夹</p>\n","site":{"data":{}},"excerpt":"","more":"<p>#####基本环境：<br>centos7、centos6.5</p>\n<p>deb后缀的软件包是for Debian系的（包括Ubuntu），不是给centos安装的。<br>rpm后缀的软件包才是for Redhat系的（包括CentOS）。</p>\n<p>如果想安装deb包，要安装dpkg命令~<br>或者是用alien把.deb转化为rpm，然后运行~<br>yum是操作源组（里面各种官方程序），而rpm是操作自己的rpm包（自己下载过来的）</p>\n<p>#####坑一<br>直接从windows拖到vm可能会导致文件缩小（丢失信息）</p>\n<p>#####坑二<br>使用rpm可能需要依赖包，使用yum安装（yum search <strong><em>:查询</em></strong>的yum源）</p>\n<p>#####坑三<br>如果你的linux采用最小安装（没有图形界面等等），很多命令是默认没有安装的，所以你使用坑二或是在线下载的方式，结果各种错误，此时就需要注意你的网络试试：ip addr；发现你的ip并没有分配，service network start; 开启网络吧!(记得修改配置文件ONBOOT=yes–开机启动网络)<br>接着yum search *，查询到位置后，yum install *。(有的命令需要updatedb,比如locate)</p>\n<p>#####坑四<br>突然有天别人告诉我，所有账户都登录不上（包括root），后来直接通过阿里的控制台登录成功，然后查看原因<br>一般远程登录不上，先检查端口22(负责远程连接的端口),发现root权限竟然无法开放和关闭端口，脚本的所有权已被修改，而且每个文件的所有权都属于某用户，原来他误操作(chmod *** /)，当时他没发现可怕的事情，也就没放在心上；之后就炸了。<br>把所有的文件属性都改为root，然后单独修改每个账户的文件夹（包括子文件夹）的权限 (-R：递归修改 子文件)<br>chmod -R /  权限修改<br>chgrp 权限组修改<br>chown -R tangyb.bxGroup ./polaris 修改文件属性（权限、组等等）</p>\n<p>#####坑五<br>个别用户登录不上（显示建立连接通道，然后就和卡机了一样），查看登录日志（文件：/var/log/secure），发现错误，此用户的进程数过多（默认是1024） ，提升进程数（文件：90-nproc.conf）或是关闭此用户下的进程（pkill -u username）。</p>\n<p>#####坑六<br>突然某天vm不能远程了<br>主机不能ping通vm，vm可以ping通主机并且可以上网（采用的nat模式）<br>后改为桥接模式，主机可以连接但是vm无法上网（公司绑定了mac地址）,尴尬！<br>因为以前是可以的，所以不存在网上说的nat不能被远程的情况，仔细想想公司是以10开头的网络，而vm是192开头，根本就不在一个网段,那么原来是怎么通信的？<br>后来查了下是和两个虚拟网卡有关vmnet1和vmnet8<br>一个是设置私有网络（Host Only）时，用来和主机通信的，禁用以后就无法正常使用Host-Only模式了，另一个是设置网络地址翻译（NAT）时，和主机通讯使用的。<br>而我上次直接禁用了这两个，如果你只是远程vm，只需打开vmnet8.</p>\n<p>#####坑七<br>（自家wifi）<br>A、vm中新建的centos7无法连接网络（桥接模式，没有复制物理网络连接状态），后来ping宿主ip出现network is unreachable（网络不可达）也没有ifcfg-eth0文件（cent7貌似都没有），直接修改ifcfg-eno167777736文件，改为ONBOOT=yes（开机启动此配置），然后service network start。 ok！搞定<br>B、如果 NAT也存在上面的问题unreachable，首页查看宿主机器的默认网关，接着将v8的网关改为一致即可（或是.2，.1）。</p>\n<p>在公司的时候，宿主机器的ip和mac是绑定的，NAT模式是可以的。(有的时候会有问题)，主要就是这个网关IP的原因。也可以使用桥接，指定宿主机器的物理网卡<br>ps:桥接相当于你的兄弟机器，大家在一个网段；NAT相当于宿主机器做为路由，虚拟机做为局域网中的一台机器（所以IP为192.168**）。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/3650492-b77ea2470a92bb8b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p>###常识</p>\n<p>#####1、下载<strong>*.sh文件，并直接运行，会下载相关组件及软件（如google浏览器）<br>  rpm 文件：rpm -ivh </strong>.rpm<br>(rpm安装后有些需要yum 真正安装软件及其依赖)</p>\n<p>#####2、解压文件<br>  cp -r 源位置 目标位置<br>  tar -xvf **.tar.gz  (-v/x:压缩/解压，-v:详细过程，-f:输出/输入文件)</p>\n<p>#####3、循环删除此目录及子文件、文件夹：rm -rf <em>**</em></p>\n<p>4.默认安装路径：usr/java<br>   环境配置： etc/profile<br>   通过export只是临时性，需要在profile加上路径，然后source /etc/profile使环境立即生效</p>\n<p>#####5、查询安装了哪些jdk<br>  rpm -qa|grep jdk</p>\n<p>#####6、卸载相应jdk版本<br>rpm -qa | grep java #查询<br>rpm -e –nodeps <strong>** #卸载相关版本<br>（找不到openjdksource可以：yum -y remove java </strong>）–貌似没用，先备着(只是删除软件包)</p>\n<p>#####7、文件属性<br>　 r 表示文件可以被读（read）<br>　　w 表示文件可以被写（write）<br>　　x 表示文件可以被执行（如果它是程序的话）<br>　　其中：rwx也可以用数字来代替<br>　　r  ————4<br>　　w ————2<br>　　x ————1<br>　　- ————0<br>-rw-r–r– (644) 只有所有者才有读和写的权限，组群和其他人只有读的权限<br>4755：drwsr-xr-s d:文件类型（目录文件） d/rws/r-x/r-x<br>这个4表示其他用户执行文件时，具有与所有者相当的权限,所以写成rws（原本是rwx）</p>\n<p>#####8、wget 下载想要的rpm或是其他文件</p>\n<p>#####9、sudoers文件的作用是 控制用户可以执行哪些指令</p>\n<p>#####10、开放3306端口（新安装的mysql可能无法远程，如果用户表已经赋权好了，远程连接报10038错误）<br>firewall-cmd –zone=public –add-port=3306/tcp –permanent #开放3306<br>firewall-cmd –reload #在不改变状态的条件下重新加载防火墙<br>上面的指令完全ok，下面的备用<br>systemctl stop firewalld.service #停止<br>systemctl disable firewalld.service #禁用<br>（centos6.5 service iptables stop）<br>神坑：直接stop防火墙，依旧访问不了，必须要先开发端口</p>\n<p>#####11、vi编辑器<br>gg:第一行<br>G：最后一行<br>ctrl+b:上翻一页<br>ctrl+f:下翻一页 </p>\n<p>/<em> 从光标开始处向文件尾搜索<br>?</em> 从光标开始处向文件首搜索<br>n：在同一方向重复上一次搜索命令(/?的方向决定方向)</p>\n<p>shift+v:块选择<br>yy:块复制<br>dd:剪切当前行<br>p:粘贴</p>\n<p>#####12、epel-release<br>安装docker的时候看教程需要安装epel-release包，我记得以前安装过，查询之后才知道这是第三库源，里面有很多程序方便下载而且很多扩展包比官网更新较快（官方以稳定为主）。<br>yum install docker（centos7下直接安装，不同版本会不同）</p>\n<p>#####13、进程操作<br>ctrl-c 发送 SIGINT 信号给前台进程组中的所有进程。常用于终止正在运行的程序。<br>ctrl-z 发送 SIGTSTP 信号给前台进程组中的所有进程，常用于挂起一个进程</p>\n<p>crtl+z 将进程挂起，然后fg/bg把刚刚挂在的程序放在前台/后台运行</p>\n<p>#####14、查看版本<br>系统版本：cat  /etc/redhat-release<br>内核版本：uname -r</p>\n<p>#####15、查看端口占用<br>ps -anp |grep 8080</p>\n<p>#####16、golang的install是默认在/usr/local/bin/ 如果想自己配置，需要在profile添加指定路径。<br>export GOROOT=/usr/tangyb/go<br>export GOPATH=$PATH:$GOROOT/bin</p>\n<p>#####17、设置tomcat的https<br>a）生成文件 jdk1.7.0_79/bin/keytool -genkey -alias polaris -keyalg RSA -keystore ./polaris.keystore<br>b）导出证书 jdk1.7.0_79/bin/keytool  -export -alias polaris -keystore ./polaris.keystore -storepass <strong>***</strong> -rfc -file polaris.cer<br>c) 在server.xml文件的ssl/tls端口 加入keystoreFile=”/usr/baxia/users/tangyb/tomcat_https/polaris.keystore” keystorePass=”huoying3138266”<br><em>**</em>一定要记得在输入name的时候是写入 网站域名，否则会出现无法通过身份验证的红叉<br>参考文章<a href=\"http://www.cnblogs.com/green-hand/p/6514597.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/green-hand/p/6514597.html</a></p>\n<p>#####18、rm命令的修改（改为mv） 及 定时清除文件<br>rm更改<br>a、创建回收站，存放删除的文件<br>b、创建mv脚本文件<br>c、在bashrc将rm捕获并改为调用mv脚本<br>d、定时清除回收站的文件</p>\n<p>用户级别：<br>crontab -e 编辑crontab定时文件<br>crontab -l 查看明细列表（不包括系统级别的）<br>service crond restart 重启crontab的服务</p>\n<p>系统级别：<br>/etc/crontab ##注意格式，需要添加指定用户</p>\n<p>所有的crontab的执行过程 都可以在 /var/log/cron 查看<br>(如果任务执行了，没有结果，多注意权限、任务本身等等)</p>\n<p>profile：登录会读取<br>bashrc：每次执行bash会读取</p>\n<p>/etc/profile与/etc/bashrc的区别<br>前一个主要用来设置一些系统变量,比如JAVA_HOME等等,后面一个主要用来保存一些bash的设置.<br>/etc/profile:此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行.<br>并从/etc/profile.d目录的配置文件中搜集shell的设置.<br>/etc/bashrc:为每一个运行bash shell的用户执行此文件.当bash shell被打开时,该文件被读取.<br>~/.bash_profile:每个用户都可使用该文件输入专用于自己使用的shell信息,当用户登录时,该<br>文件仅仅执行一次!默认情况下,他设置一些环境变量,执行用户的.bashrc文件.<br>~/.bashrc:该文件包含专用于你的bash shell的bash信息,当登录时以及每次打开新的shell时,该<br>该文件被读取.<br>~/.bash_logout:当每次退出系统(退出bash shell)时,执行该文件.</p>\n<p>/etc/下的很多文件都是系统级别的<br>比如crontab、bashrc、profile（相当于全局）<br>而这些文件 每个用户也会 单独拥有</p>\n<p>#####19、locate<br>locate速度很快，是因为有一个检索库，所以用之前最好updatedb下</p>\n<p>#####20、邮件，广播等<br>w: 查看在线账户<br>wall: 群发消息<br>write: 个人私发<br>mail： 邮件发送</p>\n<p>#####21、VMware Tools安装（转载：<a href=\"http://www.epinv.com/post/5217.html）\" target=\"_blank\" rel=\"noopener\">http://www.epinv.com/post/5217.html）</a><br>虚拟机-安装VMware Tools<br>mkdir /media/mnt    #新建挂载目录<br>mount /dev/cdrom    /media/mnt/      #挂载VMware Tools安装盘到/media/mnt/目录<br>可以移动到安装目录在解压安装<br>tar zxvf VMwareTools-9.6.2-1688356.tar.gz #解压<br>./vmware-install.pl  #安装<br>成功后重启服务器</p>\n<p>#####22、系统监控<br>空间大小：du -sm ./logs/   （s:指定的目录，m：按照MB来显示大小）<br>日志ERROR高亮：tail -f xxx.log | perl -pe ‘s/(ERROR)/\\e[1;31m$1\\e[0m/g’</p>\n<p>#####23. 集群网络基本配置（centos 7）<br>a. 设置静态ip(NAT模式)<br>修改配置文件 /etc/sysconfig/network-scripts/ifcfg-eno16777736<br>BOOTPROTO=static ##默认dhcp，改为静态分配<br>ONBOOT=yes  ##自启动，默认no<br>IPADDR=192.168.118.129   ##ip地址，其中192.168.118和NAT模式的子网IP相同<br>GATEWAY=192.168.118.2   ##网关，和NAT模式设置的网关相同<br>NETMASK=255.255.255.0<br>DNS1=192.168.118.2     ##和网关相同 或是 114.114.114.114（电信的DNS）或是223.5.5.5（阿里），可在NAT模式菜单中修改</p>\n<p>service network start 重启ok, ping百度测试</p>\n<p>b. 端口开放<br>firewall-cmd –zone=public –add-port=3306/tcp –permanent #永久开放3306<br>firewall-cmd –reload #重新加载防火墙规则<br>systemctl stop firewalld.service #停止<br>systemctl disable firewalld.service #禁用</p>\n<p>#####24.集群资源共享<br>采用scp传送，之前需要准备ssh免密登录<br>scp -r 源文件夹  username@ip(或者映射名):目标文件夹<br>-r：传输文件夹</p>\n"},{"title":"霍爱简评","date":"2019-04-12T03:32:30.000Z","_content":"\n![霍乱时期的爱情](http://upload-images.jianshu.io/upload_images/3650492-4bce061331b8926a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n>安全感、和谐和幸福，这些东西一旦相加，或许看似爱情，也几乎等于爱情。但它们终究不是爱情。\n\n下班时间花费了几个晚上进出这个世界，和我预想的不同，它根本不是霍乱时期男女主人公相依为命追寻爱情的故事，我曾以为它是梁山伯与祝英台、是Jack和Rose、是罗密欧与朱丽叶。我一心推开厚重的花园大门，铺面而来的竟是如此美妙的天堂。\n>旅行的美丽，毫无意外都是迷途遇到的惊喜。\n\n阿里萨有着盖茨比一般的对爱的执着，也如村上笔下渡边的风流矛盾。他或许也曾有过迷茫、踌躇与忧虑，他也曾想迎娶从众多情人中一位。但他始终相信，肉体可以背叛，但灵魂始终只属于明娜。\n\n明娜年轻之时也是如此的爱着阿里萨，直到她见过更多世面、更多的人。旅行回归后，当阿里萨站在她面前的瞬间，她突然不爱他了。我想，她或许觉得阿里萨已经配不上自己，她已经经历了那么多事情，而他还如当年那般丝毫未变，显的那般稚嫩。这些年除了年龄，他或许什么都未曾增长，但有一样，我坚信，他比以前更爱她了。\n\n明娜最终选择嫁给了拥有财富、声望、良好品德的贵族，乌尔比诺医生。\n\n医生既是英雄又是绅士，除了贵族的陋习外，他几乎是个无可挑剔的男人。他爱着自己的家乡，更为这座城市付出了大量的努力。回顾医生的一生，仅仅只是那一次出轨，并在明娜离开前便已经彻底斩断了与情人间的关系，他同样深爱着明娜。\n\n而在医生去世之前的五十一年时间里，阿里萨不断的更换情人，在肉体间寻求灵魂的安慰。不管和谁在一起， 他始终爱着明娜。渴望听到她的消息，见到她的身影。只因在镜子中看到过明娜，就决定买下它。他爱她爱到发疯，却很少干过疯事，唯独在医生葬礼结束的那个晚上，面对明娜:“这个机会我已经等了半个多世纪，就是为了能再一次向您重申我对您永恒的忠诚和不渝的爱情”，大半辈子的等待在这一刻爆发出来。\n\n五十多年的等待，我想象不出那是什么样的对于爱情的坚持，他对她的爱到底有多么的深刻，他是如何度过这半个世纪的煎熬。合上书本，我能猜想到的，帮他平安度过思念、悲痛时期的，除了与情人间肉体的结合，只能是音乐以及阅读的经历带给他灵魂的安慰、丰富与蜕变。他始终爱着明娜，为了她，自己一步步变得更加优秀、沉稳、富有魅力。当那晚说出那句话之后，他就向她展示了自己独特的灵魂以及忠贞的爱情。\n\n我无法分析，对于医生和阿里萨的爱，谁才是更好的选择。阿里萨爱着明娜，医生同样爱着明娜。或许医生没有阿里萨那般对于爱的坚持，因为有更多的事情需要他来完成，他还有更多的想法与抱负需要实现。就算当年明娜选择的是阿里萨，那么现在的情况又该如何，明娜过的会比现在幸福吗？\n\n我无法知道结果。从这个世界中，我能感觉到的，能触及我灵魂的。我想，*对于爱情来说，乌尔比诺爱的只是妻子，而阿里萨爱的---一直都是明娜。*\n\n而在本书的结尾，作为女主人公的明娜，不管是公然反对女儿，亦或是下达命令调转船头，都是对于社会的控诉，对于爱情的保卫。爱情，那是不论何时何地都可以也应该存在的。当你第一次见到它，它就再也与年龄无关了。","source":"_posts/霍爱简评.md","raw":"---\ntitle: 霍爱简评\ndate: 2019-04-12 11:32:30\ntags: \n- 爱情\n- 书评\ncategories:\n- 文学\n---\n\n![霍乱时期的爱情](http://upload-images.jianshu.io/upload_images/3650492-4bce061331b8926a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n>安全感、和谐和幸福，这些东西一旦相加，或许看似爱情，也几乎等于爱情。但它们终究不是爱情。\n\n下班时间花费了几个晚上进出这个世界，和我预想的不同，它根本不是霍乱时期男女主人公相依为命追寻爱情的故事，我曾以为它是梁山伯与祝英台、是Jack和Rose、是罗密欧与朱丽叶。我一心推开厚重的花园大门，铺面而来的竟是如此美妙的天堂。\n>旅行的美丽，毫无意外都是迷途遇到的惊喜。\n\n阿里萨有着盖茨比一般的对爱的执着，也如村上笔下渡边的风流矛盾。他或许也曾有过迷茫、踌躇与忧虑，他也曾想迎娶从众多情人中一位。但他始终相信，肉体可以背叛，但灵魂始终只属于明娜。\n\n明娜年轻之时也是如此的爱着阿里萨，直到她见过更多世面、更多的人。旅行回归后，当阿里萨站在她面前的瞬间，她突然不爱他了。我想，她或许觉得阿里萨已经配不上自己，她已经经历了那么多事情，而他还如当年那般丝毫未变，显的那般稚嫩。这些年除了年龄，他或许什么都未曾增长，但有一样，我坚信，他比以前更爱她了。\n\n明娜最终选择嫁给了拥有财富、声望、良好品德的贵族，乌尔比诺医生。\n\n医生既是英雄又是绅士，除了贵族的陋习外，他几乎是个无可挑剔的男人。他爱着自己的家乡，更为这座城市付出了大量的努力。回顾医生的一生，仅仅只是那一次出轨，并在明娜离开前便已经彻底斩断了与情人间的关系，他同样深爱着明娜。\n\n而在医生去世之前的五十一年时间里，阿里萨不断的更换情人，在肉体间寻求灵魂的安慰。不管和谁在一起， 他始终爱着明娜。渴望听到她的消息，见到她的身影。只因在镜子中看到过明娜，就决定买下它。他爱她爱到发疯，却很少干过疯事，唯独在医生葬礼结束的那个晚上，面对明娜:“这个机会我已经等了半个多世纪，就是为了能再一次向您重申我对您永恒的忠诚和不渝的爱情”，大半辈子的等待在这一刻爆发出来。\n\n五十多年的等待，我想象不出那是什么样的对于爱情的坚持，他对她的爱到底有多么的深刻，他是如何度过这半个世纪的煎熬。合上书本，我能猜想到的，帮他平安度过思念、悲痛时期的，除了与情人间肉体的结合，只能是音乐以及阅读的经历带给他灵魂的安慰、丰富与蜕变。他始终爱着明娜，为了她，自己一步步变得更加优秀、沉稳、富有魅力。当那晚说出那句话之后，他就向她展示了自己独特的灵魂以及忠贞的爱情。\n\n我无法分析，对于医生和阿里萨的爱，谁才是更好的选择。阿里萨爱着明娜，医生同样爱着明娜。或许医生没有阿里萨那般对于爱的坚持，因为有更多的事情需要他来完成，他还有更多的想法与抱负需要实现。就算当年明娜选择的是阿里萨，那么现在的情况又该如何，明娜过的会比现在幸福吗？\n\n我无法知道结果。从这个世界中，我能感觉到的，能触及我灵魂的。我想，*对于爱情来说，乌尔比诺爱的只是妻子，而阿里萨爱的---一直都是明娜。*\n\n而在本书的结尾，作为女主人公的明娜，不管是公然反对女儿，亦或是下达命令调转船头，都是对于社会的控诉，对于爱情的保卫。爱情，那是不论何时何地都可以也应该存在的。当你第一次见到它，它就再也与年龄无关了。","slug":"霍爱简评","published":1,"updated":"2019-04-26T07:00:19.033Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjuxqcicv0009dwmd2oyawb69","content":"<p><img src=\"http://upload-images.jianshu.io/upload_images/3650492-4bce061331b8926a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"霍乱时期的爱情\"></p>\n<blockquote>\n<p>安全感、和谐和幸福，这些东西一旦相加，或许看似爱情，也几乎等于爱情。但它们终究不是爱情。</p>\n</blockquote>\n<p>下班时间花费了几个晚上进出这个世界，和我预想的不同，它根本不是霍乱时期男女主人公相依为命追寻爱情的故事，我曾以为它是梁山伯与祝英台、是Jack和Rose、是罗密欧与朱丽叶。我一心推开厚重的花园大门，铺面而来的竟是如此美妙的天堂。</p>\n<blockquote>\n<p>旅行的美丽，毫无意外都是迷途遇到的惊喜。</p>\n</blockquote>\n<p>阿里萨有着盖茨比一般的对爱的执着，也如村上笔下渡边的风流矛盾。他或许也曾有过迷茫、踌躇与忧虑，他也曾想迎娶从众多情人中一位。但他始终相信，肉体可以背叛，但灵魂始终只属于明娜。</p>\n<p>明娜年轻之时也是如此的爱着阿里萨，直到她见过更多世面、更多的人。旅行回归后，当阿里萨站在她面前的瞬间，她突然不爱他了。我想，她或许觉得阿里萨已经配不上自己，她已经经历了那么多事情，而他还如当年那般丝毫未变，显的那般稚嫩。这些年除了年龄，他或许什么都未曾增长，但有一样，我坚信，他比以前更爱她了。</p>\n<p>明娜最终选择嫁给了拥有财富、声望、良好品德的贵族，乌尔比诺医生。</p>\n<p>医生既是英雄又是绅士，除了贵族的陋习外，他几乎是个无可挑剔的男人。他爱着自己的家乡，更为这座城市付出了大量的努力。回顾医生的一生，仅仅只是那一次出轨，并在明娜离开前便已经彻底斩断了与情人间的关系，他同样深爱着明娜。</p>\n<p>而在医生去世之前的五十一年时间里，阿里萨不断的更换情人，在肉体间寻求灵魂的安慰。不管和谁在一起， 他始终爱着明娜。渴望听到她的消息，见到她的身影。只因在镜子中看到过明娜，就决定买下它。他爱她爱到发疯，却很少干过疯事，唯独在医生葬礼结束的那个晚上，面对明娜:“这个机会我已经等了半个多世纪，就是为了能再一次向您重申我对您永恒的忠诚和不渝的爱情”，大半辈子的等待在这一刻爆发出来。</p>\n<p>五十多年的等待，我想象不出那是什么样的对于爱情的坚持，他对她的爱到底有多么的深刻，他是如何度过这半个世纪的煎熬。合上书本，我能猜想到的，帮他平安度过思念、悲痛时期的，除了与情人间肉体的结合，只能是音乐以及阅读的经历带给他灵魂的安慰、丰富与蜕变。他始终爱着明娜，为了她，自己一步步变得更加优秀、沉稳、富有魅力。当那晚说出那句话之后，他就向她展示了自己独特的灵魂以及忠贞的爱情。</p>\n<p>我无法分析，对于医生和阿里萨的爱，谁才是更好的选择。阿里萨爱着明娜，医生同样爱着明娜。或许医生没有阿里萨那般对于爱的坚持，因为有更多的事情需要他来完成，他还有更多的想法与抱负需要实现。就算当年明娜选择的是阿里萨，那么现在的情况又该如何，明娜过的会比现在幸福吗？</p>\n<p>我无法知道结果。从这个世界中，我能感觉到的，能触及我灵魂的。我想，<em>对于爱情来说，乌尔比诺爱的只是妻子，而阿里萨爱的—一直都是明娜。</em></p>\n<p>而在本书的结尾，作为女主人公的明娜，不管是公然反对女儿，亦或是下达命令调转船头，都是对于社会的控诉，对于爱情的保卫。爱情，那是不论何时何地都可以也应该存在的。当你第一次见到它，它就再也与年龄无关了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://upload-images.jianshu.io/upload_images/3650492-4bce061331b8926a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"霍乱时期的爱情\"></p>\n<blockquote>\n<p>安全感、和谐和幸福，这些东西一旦相加，或许看似爱情，也几乎等于爱情。但它们终究不是爱情。</p>\n</blockquote>\n<p>下班时间花费了几个晚上进出这个世界，和我预想的不同，它根本不是霍乱时期男女主人公相依为命追寻爱情的故事，我曾以为它是梁山伯与祝英台、是Jack和Rose、是罗密欧与朱丽叶。我一心推开厚重的花园大门，铺面而来的竟是如此美妙的天堂。</p>\n<blockquote>\n<p>旅行的美丽，毫无意外都是迷途遇到的惊喜。</p>\n</blockquote>\n<p>阿里萨有着盖茨比一般的对爱的执着，也如村上笔下渡边的风流矛盾。他或许也曾有过迷茫、踌躇与忧虑，他也曾想迎娶从众多情人中一位。但他始终相信，肉体可以背叛，但灵魂始终只属于明娜。</p>\n<p>明娜年轻之时也是如此的爱着阿里萨，直到她见过更多世面、更多的人。旅行回归后，当阿里萨站在她面前的瞬间，她突然不爱他了。我想，她或许觉得阿里萨已经配不上自己，她已经经历了那么多事情，而他还如当年那般丝毫未变，显的那般稚嫩。这些年除了年龄，他或许什么都未曾增长，但有一样，我坚信，他比以前更爱她了。</p>\n<p>明娜最终选择嫁给了拥有财富、声望、良好品德的贵族，乌尔比诺医生。</p>\n<p>医生既是英雄又是绅士，除了贵族的陋习外，他几乎是个无可挑剔的男人。他爱着自己的家乡，更为这座城市付出了大量的努力。回顾医生的一生，仅仅只是那一次出轨，并在明娜离开前便已经彻底斩断了与情人间的关系，他同样深爱着明娜。</p>\n<p>而在医生去世之前的五十一年时间里，阿里萨不断的更换情人，在肉体间寻求灵魂的安慰。不管和谁在一起， 他始终爱着明娜。渴望听到她的消息，见到她的身影。只因在镜子中看到过明娜，就决定买下它。他爱她爱到发疯，却很少干过疯事，唯独在医生葬礼结束的那个晚上，面对明娜:“这个机会我已经等了半个多世纪，就是为了能再一次向您重申我对您永恒的忠诚和不渝的爱情”，大半辈子的等待在这一刻爆发出来。</p>\n<p>五十多年的等待，我想象不出那是什么样的对于爱情的坚持，他对她的爱到底有多么的深刻，他是如何度过这半个世纪的煎熬。合上书本，我能猜想到的，帮他平安度过思念、悲痛时期的，除了与情人间肉体的结合，只能是音乐以及阅读的经历带给他灵魂的安慰、丰富与蜕变。他始终爱着明娜，为了她，自己一步步变得更加优秀、沉稳、富有魅力。当那晚说出那句话之后，他就向她展示了自己独特的灵魂以及忠贞的爱情。</p>\n<p>我无法分析，对于医生和阿里萨的爱，谁才是更好的选择。阿里萨爱着明娜，医生同样爱着明娜。或许医生没有阿里萨那般对于爱的坚持，因为有更多的事情需要他来完成，他还有更多的想法与抱负需要实现。就算当年明娜选择的是阿里萨，那么现在的情况又该如何，明娜过的会比现在幸福吗？</p>\n<p>我无法知道结果。从这个世界中，我能感觉到的，能触及我灵魂的。我想，<em>对于爱情来说，乌尔比诺爱的只是妻子，而阿里萨爱的—一直都是明娜。</em></p>\n<p>而在本书的结尾，作为女主人公的明娜，不管是公然反对女儿，亦或是下达命令调转船头，都是对于社会的控诉，对于爱情的保卫。爱情，那是不论何时何地都可以也应该存在的。当你第一次见到它，它就再也与年龄无关了。</p>\n"},{"title":"docker基础","date":"2017-02-09T13:14:58.000Z","_content":"\n# 环境准备\n系统环境：centos7\n安装：\n\n>$ yum install docker\n\n开启服务：service docker start\n测试：docker run hello-world (或是docker verison)\n\n# 镜像测试\n搜索本地镜像：docker images\n查看源镜像库有关java方面的镜像并且收藏数大于10：docker search -s 10 java \n下载镜像：docker pull *** （直接运行某个镜像的时候也会自动下载）\n\n后台运行learn/tutorial镜像并执行sh脚本(脚本含义：每秒输出一次hello world)\ndocker run -d learn/tutorial /bin/sh -c \"while true; do echo hello world; sleep 1; done\"\n\ndocker run -t -i runoob/ubuntu:v2 /bin/bash  \n\ndocker ps 查询正在运行的镜像\n\n从上面的查询的ID来查看此镜像输出的日志\ndocker logs ID\n\n停止镜像\ndocker stop ID\n\n# 项目实战(注意各个版本)\ndocker容器环境的安装\n\n## centos的安装\ndocker pull centos\n国外的docker Hub可能比较慢，使用下面的命令修改 daemon.json文件，会添加一个registry-mirrors：注册服务器镜像(使用daocloud的，默认为docker Hub)\ncurl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://ce611378.m.daocloud.io\n\n查看本地镜像列表\ndocker images\n\n## 操作centos\n进入系统：docker run -i -t centos /bin/bash\n新建文件：mkdir test \n！！！然后更新yum update(ubuntu的系统是 apt-get update)--------教程中只是做一个修改，直接mkdir\n！！！然后exit退出系统----------退出系统，容器会停止，所以在此之前用此账户再开一个窗口 执行下面的操作\n(后来发现docker ps -a 可以查询到所有的启动过容器，可以获取到ID。\n docker start ID 启动停止的镜像\n docker attach ID 进入镜像中            ###exit之后镜像依旧挂掉\n 或是 docker exec -i -t ID  /bin/bash   ###这种方式镜像在后台存活\n)\n\n## 提交修改\ndocker commit -m=\"第一次提交\" -a=\"polaris\" 425cef90ab3f polaris/centos:v1\n-m: 描述信息\n-a: 作者\n425cef90ab3f：ID\npolaris/centos:v1 :创建的目标镜像名+tag\n\n重新进入刚刚提交的镜像\ndocker run -i -t polaris/centos:v1 /bin/bash\n之前所做的操作都存在\n\n### \\*\\*\\*如果你想推送你的镜像到注册中心\n首先需要在docker官网创建一个Repository\n如果你本地的名字和创建的不一样，会提示未授权，使用docker tag local-images:v1 dockerHub-images:v1\na、docker login 登录docker\nb、docker push **** 然后push你的本地镜像（很多操作和git类似）\n\n\n快速构建\n1、使用docker bulid来构建（会读取dockerfile文件），推荐！更快速简洁\n2、先pull然后修改之后commit（方法一的底层也是通过这种方式）\n\n####\\*\\* 注意 \\*\\*\n## 1、从国外服务器pull镜像速度较慢，直接使用由DaoCloud或者阿里提供的Registry Mirror服务\nhttp://blog.daocloud.io/how-to-master-docker-image/\n\n## 2、挂载磁盘\ndocker run -it -v /home/download:/mnt polaris/centos:v1 /bin/bash\n将宿主的下载文件夹 挂载 到docker容器polaris镜像中的docker下\n但如果你想 在已经启动的docker镜像中挂载 请参考（还没试过）http://www.open-open.com/lib/view/open1421996521062.html\n\n######3、搭建基本环境(JDK8 + tomcat7)\na, 现在宿主机器里wget下资源(JDK8+tomcat7的tar包),坑爹的JDK7官网已经不支持游客下载\nb, 将宿主磁盘挂载到docker镜像mnt目录下，解压然后cp到自己定义的目录\nc, jdk: 修改/etc/profile，添加路径保存，然后source /etc/profile更新\n\n######4、查看容器相关信息（主要是查看网络配置，容器里面很多命令都没有）\ndocker inspect a7e0139b5940\n\n######5、端口映射\ndocker run -i -t -p 5000:8080 polaris/centos:v1 /bin/bash （交互型）\ndocker run -d -i -t -p 5000:8080 polaris/centos:v1 （后台型）\n\n######6、阿里云（以本人为例子）\n下载\ndocker pull registry.cn-hangzhou.aliyuncs.com/polarisnosnow/polaris:v2\n\n上传\ndocker login --username=****  registry.cn-hangzhou.aliyuncs.com\ndocker tag [ImageId] registry.cn-hangzhou.aliyuncs.com/polarisnosnow/polaris:[镜像版本号]\ndocker push registry.cn-hangzhou.aliyuncs.com/polarisnosnow/polaris:[镜像版本号]\n\n######7、搭建注册服务器\ndocker pull registry \ndocker run -p 5000:5000 -d -i -t registry \n之后就可以直接commit&push了\ndocker commit cid 127.0.0.1:5000/my_image:v1\ndocker push 127.0.0.1:5000/my_image:v1\n\n可以使用docker API查看库中结果\nhttp://127.0.0.1:5000/v2/_catalog\nhttp://127.0.0.1:5000/v2/my_image/tag/list\n\n注意客户端在/etc/docker/daemon.json 中添加{ \"insecure-registries\":[\"127.0.0.1:5000\"]}\n安全访问（默认走的https）\n\n######8、docker管理界面\ndockerUI:只能用于单机，单功能齐全\n构建脚本：docker run -d -p 9000:9000 --privileged -v /var/run/docker.sock:/var/run/docker.sock uifd/ui-for-docker\n\nshipyard:适合集群，各种资源分配，性能检测等\n/etc/sysconfig/docker中添加对2375的监听 OPTIONS=\"-H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock\"\nshipyard构建脚本（启动的容器较多） curl -s https://shipyard-project.com/deploy | bash -s\nUsername: admin Password: shipyard\n或者：docker run --rm -v /var/run/docker.sock:/var/run/docker.sock shipyard/deploy start\n","source":"_posts/docker基础.md","raw":"---\ntitle: docker基础\ndate: 2017-02-09 21:14:58\ntags:\n- linux\n- docker\ncategories:\n- 技术\n---\n\n# 环境准备\n系统环境：centos7\n安装：\n\n>$ yum install docker\n\n开启服务：service docker start\n测试：docker run hello-world (或是docker verison)\n\n# 镜像测试\n搜索本地镜像：docker images\n查看源镜像库有关java方面的镜像并且收藏数大于10：docker search -s 10 java \n下载镜像：docker pull *** （直接运行某个镜像的时候也会自动下载）\n\n后台运行learn/tutorial镜像并执行sh脚本(脚本含义：每秒输出一次hello world)\ndocker run -d learn/tutorial /bin/sh -c \"while true; do echo hello world; sleep 1; done\"\n\ndocker run -t -i runoob/ubuntu:v2 /bin/bash  \n\ndocker ps 查询正在运行的镜像\n\n从上面的查询的ID来查看此镜像输出的日志\ndocker logs ID\n\n停止镜像\ndocker stop ID\n\n# 项目实战(注意各个版本)\ndocker容器环境的安装\n\n## centos的安装\ndocker pull centos\n国外的docker Hub可能比较慢，使用下面的命令修改 daemon.json文件，会添加一个registry-mirrors：注册服务器镜像(使用daocloud的，默认为docker Hub)\ncurl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://ce611378.m.daocloud.io\n\n查看本地镜像列表\ndocker images\n\n## 操作centos\n进入系统：docker run -i -t centos /bin/bash\n新建文件：mkdir test \n！！！然后更新yum update(ubuntu的系统是 apt-get update)--------教程中只是做一个修改，直接mkdir\n！！！然后exit退出系统----------退出系统，容器会停止，所以在此之前用此账户再开一个窗口 执行下面的操作\n(后来发现docker ps -a 可以查询到所有的启动过容器，可以获取到ID。\n docker start ID 启动停止的镜像\n docker attach ID 进入镜像中            ###exit之后镜像依旧挂掉\n 或是 docker exec -i -t ID  /bin/bash   ###这种方式镜像在后台存活\n)\n\n## 提交修改\ndocker commit -m=\"第一次提交\" -a=\"polaris\" 425cef90ab3f polaris/centos:v1\n-m: 描述信息\n-a: 作者\n425cef90ab3f：ID\npolaris/centos:v1 :创建的目标镜像名+tag\n\n重新进入刚刚提交的镜像\ndocker run -i -t polaris/centos:v1 /bin/bash\n之前所做的操作都存在\n\n### \\*\\*\\*如果你想推送你的镜像到注册中心\n首先需要在docker官网创建一个Repository\n如果你本地的名字和创建的不一样，会提示未授权，使用docker tag local-images:v1 dockerHub-images:v1\na、docker login 登录docker\nb、docker push **** 然后push你的本地镜像（很多操作和git类似）\n\n\n快速构建\n1、使用docker bulid来构建（会读取dockerfile文件），推荐！更快速简洁\n2、先pull然后修改之后commit（方法一的底层也是通过这种方式）\n\n####\\*\\* 注意 \\*\\*\n## 1、从国外服务器pull镜像速度较慢，直接使用由DaoCloud或者阿里提供的Registry Mirror服务\nhttp://blog.daocloud.io/how-to-master-docker-image/\n\n## 2、挂载磁盘\ndocker run -it -v /home/download:/mnt polaris/centos:v1 /bin/bash\n将宿主的下载文件夹 挂载 到docker容器polaris镜像中的docker下\n但如果你想 在已经启动的docker镜像中挂载 请参考（还没试过）http://www.open-open.com/lib/view/open1421996521062.html\n\n######3、搭建基本环境(JDK8 + tomcat7)\na, 现在宿主机器里wget下资源(JDK8+tomcat7的tar包),坑爹的JDK7官网已经不支持游客下载\nb, 将宿主磁盘挂载到docker镜像mnt目录下，解压然后cp到自己定义的目录\nc, jdk: 修改/etc/profile，添加路径保存，然后source /etc/profile更新\n\n######4、查看容器相关信息（主要是查看网络配置，容器里面很多命令都没有）\ndocker inspect a7e0139b5940\n\n######5、端口映射\ndocker run -i -t -p 5000:8080 polaris/centos:v1 /bin/bash （交互型）\ndocker run -d -i -t -p 5000:8080 polaris/centos:v1 （后台型）\n\n######6、阿里云（以本人为例子）\n下载\ndocker pull registry.cn-hangzhou.aliyuncs.com/polarisnosnow/polaris:v2\n\n上传\ndocker login --username=****  registry.cn-hangzhou.aliyuncs.com\ndocker tag [ImageId] registry.cn-hangzhou.aliyuncs.com/polarisnosnow/polaris:[镜像版本号]\ndocker push registry.cn-hangzhou.aliyuncs.com/polarisnosnow/polaris:[镜像版本号]\n\n######7、搭建注册服务器\ndocker pull registry \ndocker run -p 5000:5000 -d -i -t registry \n之后就可以直接commit&push了\ndocker commit cid 127.0.0.1:5000/my_image:v1\ndocker push 127.0.0.1:5000/my_image:v1\n\n可以使用docker API查看库中结果\nhttp://127.0.0.1:5000/v2/_catalog\nhttp://127.0.0.1:5000/v2/my_image/tag/list\n\n注意客户端在/etc/docker/daemon.json 中添加{ \"insecure-registries\":[\"127.0.0.1:5000\"]}\n安全访问（默认走的https）\n\n######8、docker管理界面\ndockerUI:只能用于单机，单功能齐全\n构建脚本：docker run -d -p 9000:9000 --privileged -v /var/run/docker.sock:/var/run/docker.sock uifd/ui-for-docker\n\nshipyard:适合集群，各种资源分配，性能检测等\n/etc/sysconfig/docker中添加对2375的监听 OPTIONS=\"-H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock\"\nshipyard构建脚本（启动的容器较多） curl -s https://shipyard-project.com/deploy | bash -s\nUsername: admin Password: shipyard\n或者：docker run --rm -v /var/run/docker.sock:/var/run/docker.sock shipyard/deploy start\n","slug":"docker基础","published":1,"updated":"2019-05-07T11:55:21.651Z","_id":"cjvdq1lqy0000zsmdnbkfbccf","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h1><p>系统环境：centos7<br>安装：</p>\n<blockquote>\n<p>$ yum install docker</p>\n</blockquote>\n<p>开启服务：service docker start<br>测试：docker run hello-world (或是docker verison)</p>\n<h1 id=\"镜像测试\"><a href=\"#镜像测试\" class=\"headerlink\" title=\"镜像测试\"></a>镜像测试</h1><p>搜索本地镜像：docker images<br>查看源镜像库有关java方面的镜像并且收藏数大于10：docker search -s 10 java<br>下载镜像：docker pull *** （直接运行某个镜像的时候也会自动下载）</p>\n<p>后台运行learn/tutorial镜像并执行sh脚本(脚本含义：每秒输出一次hello world)<br>docker run -d learn/tutorial /bin/sh -c “while true; do echo hello world; sleep 1; done”</p>\n<p>docker run -t -i runoob/ubuntu:v2 /bin/bash  </p>\n<p>docker ps 查询正在运行的镜像</p>\n<p>从上面的查询的ID来查看此镜像输出的日志<br>docker logs ID</p>\n<p>停止镜像<br>docker stop ID</p>\n<h1 id=\"项目实战-注意各个版本\"><a href=\"#项目实战-注意各个版本\" class=\"headerlink\" title=\"项目实战(注意各个版本)\"></a>项目实战(注意各个版本)</h1><p>docker容器环境的安装</p>\n<h2 id=\"centos的安装\"><a href=\"#centos的安装\" class=\"headerlink\" title=\"centos的安装\"></a>centos的安装</h2><p>docker pull centos<br>国外的docker Hub可能比较慢，使用下面的命令修改 daemon.json文件，会添加一个registry-mirrors：注册服务器镜像(使用daocloud的，默认为docker Hub)<br>curl -sSL <a href=\"https://get.daocloud.io/daotools/set_mirror.sh\" target=\"_blank\" rel=\"noopener\">https://get.daocloud.io/daotools/set_mirror.sh</a> | sh -s <a href=\"http://ce611378.m.daocloud.io\" target=\"_blank\" rel=\"noopener\">http://ce611378.m.daocloud.io</a></p>\n<p>查看本地镜像列表<br>docker images</p>\n<h2 id=\"操作centos\"><a href=\"#操作centos\" class=\"headerlink\" title=\"操作centos\"></a>操作centos</h2><p>进入系统：docker run -i -t centos /bin/bash<br>新建文件：mkdir test<br>！！！然后更新yum update(ubuntu的系统是 apt-get update)——–教程中只是做一个修改，直接mkdir<br>！！！然后exit退出系统———-退出系统，容器会停止，所以在此之前用此账户再开一个窗口 执行下面的操作<br>(后来发现docker ps -a 可以查询到所有的启动过容器，可以获取到ID。<br> docker start ID 启动停止的镜像<br> docker attach ID 进入镜像中            ###exit之后镜像依旧挂掉<br> 或是 docker exec -i -t ID  /bin/bash   ###这种方式镜像在后台存活<br>)</p>\n<h2 id=\"提交修改\"><a href=\"#提交修改\" class=\"headerlink\" title=\"提交修改\"></a>提交修改</h2><p>docker commit -m=”第一次提交” -a=”polaris” 425cef90ab3f polaris/centos:v1<br>-m: 描述信息<br>-a: 作者<br>425cef90ab3f：ID<br>polaris/centos:v1 :创建的目标镜像名+tag</p>\n<p>重新进入刚刚提交的镜像<br>docker run -i -t polaris/centos:v1 /bin/bash<br>之前所做的操作都存在</p>\n<h3 id=\"如果你想推送你的镜像到注册中心\"><a href=\"#如果你想推送你的镜像到注册中心\" class=\"headerlink\" title=\"***如果你想推送你的镜像到注册中心\"></a>***如果你想推送你的镜像到注册中心</h3><p>首先需要在docker官网创建一个Repository<br>如果你本地的名字和创建的不一样，会提示未授权，使用docker tag local-images:v1 dockerHub-images:v1<br>a、docker login 登录docker<br>b、docker push <em>**</em> 然后push你的本地镜像（很多操作和git类似）</p>\n<p>快速构建<br>1、使用docker bulid来构建（会读取dockerfile文件），推荐！更快速简洁<br>2、先pull然后修改之后commit（方法一的底层也是通过这种方式）</p>\n<p>####** 注意 **</p>\n<h2 id=\"1、从国外服务器pull镜像速度较慢，直接使用由DaoCloud或者阿里提供的Registry-Mirror服务\"><a href=\"#1、从国外服务器pull镜像速度较慢，直接使用由DaoCloud或者阿里提供的Registry-Mirror服务\" class=\"headerlink\" title=\"1、从国外服务器pull镜像速度较慢，直接使用由DaoCloud或者阿里提供的Registry Mirror服务\"></a>1、从国外服务器pull镜像速度较慢，直接使用由DaoCloud或者阿里提供的Registry Mirror服务</h2><p><a href=\"http://blog.daocloud.io/how-to-master-docker-image/\" target=\"_blank\" rel=\"noopener\">http://blog.daocloud.io/how-to-master-docker-image/</a></p>\n<h2 id=\"2、挂载磁盘\"><a href=\"#2、挂载磁盘\" class=\"headerlink\" title=\"2、挂载磁盘\"></a>2、挂载磁盘</h2><p>docker run -it -v /home/download:/mnt polaris/centos:v1 /bin/bash<br>将宿主的下载文件夹 挂载 到docker容器polaris镜像中的docker下<br>但如果你想 在已经启动的docker镜像中挂载 请参考（还没试过）<a href=\"http://www.open-open.com/lib/view/open1421996521062.html\" target=\"_blank\" rel=\"noopener\">http://www.open-open.com/lib/view/open1421996521062.html</a></p>\n<p>######3、搭建基本环境(JDK8 + tomcat7)<br>a, 现在宿主机器里wget下资源(JDK8+tomcat7的tar包),坑爹的JDK7官网已经不支持游客下载<br>b, 将宿主磁盘挂载到docker镜像mnt目录下，解压然后cp到自己定义的目录<br>c, jdk: 修改/etc/profile，添加路径保存，然后source /etc/profile更新</p>\n<p>######4、查看容器相关信息（主要是查看网络配置，容器里面很多命令都没有）<br>docker inspect a7e0139b5940</p>\n<p>######5、端口映射<br>docker run -i -t -p 5000:8080 polaris/centos:v1 /bin/bash （交互型）<br>docker run -d -i -t -p 5000:8080 polaris/centos:v1 （后台型）</p>\n<p>######6、阿里云（以本人为例子）<br>下载<br>docker pull registry.cn-hangzhou.aliyuncs.com/polarisnosnow/polaris:v2</p>\n<p>上传<br>docker login –username=<em>**</em>  registry.cn-hangzhou.aliyuncs.com<br>docker tag [ImageId] registry.cn-hangzhou.aliyuncs.com/polarisnosnow/polaris:[镜像版本号]<br>docker push registry.cn-hangzhou.aliyuncs.com/polarisnosnow/polaris:[镜像版本号]</p>\n<p>######7、搭建注册服务器<br>docker pull registry<br>docker run -p 5000:5000 -d -i -t registry<br>之后就可以直接commit&amp;push了<br>docker commit cid 127.0.0.1:5000/my_image:v1<br>docker push 127.0.0.1:5000/my_image:v1</p>\n<p>可以使用docker API查看库中结果<br><a href=\"http://127.0.0.1:5000/v2/_catalog\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:5000/v2/_catalog</a><br><a href=\"http://127.0.0.1:5000/v2/my_image/tag/list\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:5000/v2/my_image/tag/list</a></p>\n<p>注意客户端在/etc/docker/daemon.json 中添加{ “insecure-registries”:[“127.0.0.1:5000”]}<br>安全访问（默认走的https）</p>\n<p>######8、docker管理界面<br>dockerUI:只能用于单机，单功能齐全<br>构建脚本：docker run -d -p 9000:9000 –privileged -v /var/run/docker.sock:/var/run/docker.sock uifd/ui-for-docker</p>\n<p>shipyard:适合集群，各种资源分配，性能检测等<br>/etc/sysconfig/docker中添加对2375的监听 OPTIONS=”-H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock”<br>shipyard构建脚本（启动的容器较多） curl -s <a href=\"https://shipyard-project.com/deploy\" target=\"_blank\" rel=\"noopener\">https://shipyard-project.com/deploy</a> | bash -s<br>Username: admin Password: shipyard<br>或者：docker run –rm -v /var/run/docker.sock:/var/run/docker.sock shipyard/deploy start</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h1><p>系统环境：centos7<br>安装：</p>\n<blockquote>\n<p>$ yum install docker</p>\n</blockquote>\n<p>开启服务：service docker start<br>测试：docker run hello-world (或是docker verison)</p>\n<h1 id=\"镜像测试\"><a href=\"#镜像测试\" class=\"headerlink\" title=\"镜像测试\"></a>镜像测试</h1><p>搜索本地镜像：docker images<br>查看源镜像库有关java方面的镜像并且收藏数大于10：docker search -s 10 java<br>下载镜像：docker pull *** （直接运行某个镜像的时候也会自动下载）</p>\n<p>后台运行learn/tutorial镜像并执行sh脚本(脚本含义：每秒输出一次hello world)<br>docker run -d learn/tutorial /bin/sh -c “while true; do echo hello world; sleep 1; done”</p>\n<p>docker run -t -i runoob/ubuntu:v2 /bin/bash  </p>\n<p>docker ps 查询正在运行的镜像</p>\n<p>从上面的查询的ID来查看此镜像输出的日志<br>docker logs ID</p>\n<p>停止镜像<br>docker stop ID</p>\n<h1 id=\"项目实战-注意各个版本\"><a href=\"#项目实战-注意各个版本\" class=\"headerlink\" title=\"项目实战(注意各个版本)\"></a>项目实战(注意各个版本)</h1><p>docker容器环境的安装</p>\n<h2 id=\"centos的安装\"><a href=\"#centos的安装\" class=\"headerlink\" title=\"centos的安装\"></a>centos的安装</h2><p>docker pull centos<br>国外的docker Hub可能比较慢，使用下面的命令修改 daemon.json文件，会添加一个registry-mirrors：注册服务器镜像(使用daocloud的，默认为docker Hub)<br>curl -sSL <a href=\"https://get.daocloud.io/daotools/set_mirror.sh\" target=\"_blank\" rel=\"noopener\">https://get.daocloud.io/daotools/set_mirror.sh</a> | sh -s <a href=\"http://ce611378.m.daocloud.io\" target=\"_blank\" rel=\"noopener\">http://ce611378.m.daocloud.io</a></p>\n<p>查看本地镜像列表<br>docker images</p>\n<h2 id=\"操作centos\"><a href=\"#操作centos\" class=\"headerlink\" title=\"操作centos\"></a>操作centos</h2><p>进入系统：docker run -i -t centos /bin/bash<br>新建文件：mkdir test<br>！！！然后更新yum update(ubuntu的系统是 apt-get update)——–教程中只是做一个修改，直接mkdir<br>！！！然后exit退出系统———-退出系统，容器会停止，所以在此之前用此账户再开一个窗口 执行下面的操作<br>(后来发现docker ps -a 可以查询到所有的启动过容器，可以获取到ID。<br> docker start ID 启动停止的镜像<br> docker attach ID 进入镜像中            ###exit之后镜像依旧挂掉<br> 或是 docker exec -i -t ID  /bin/bash   ###这种方式镜像在后台存活<br>)</p>\n<h2 id=\"提交修改\"><a href=\"#提交修改\" class=\"headerlink\" title=\"提交修改\"></a>提交修改</h2><p>docker commit -m=”第一次提交” -a=”polaris” 425cef90ab3f polaris/centos:v1<br>-m: 描述信息<br>-a: 作者<br>425cef90ab3f：ID<br>polaris/centos:v1 :创建的目标镜像名+tag</p>\n<p>重新进入刚刚提交的镜像<br>docker run -i -t polaris/centos:v1 /bin/bash<br>之前所做的操作都存在</p>\n<h3 id=\"如果你想推送你的镜像到注册中心\"><a href=\"#如果你想推送你的镜像到注册中心\" class=\"headerlink\" title=\"***如果你想推送你的镜像到注册中心\"></a>***如果你想推送你的镜像到注册中心</h3><p>首先需要在docker官网创建一个Repository<br>如果你本地的名字和创建的不一样，会提示未授权，使用docker tag local-images:v1 dockerHub-images:v1<br>a、docker login 登录docker<br>b、docker push <em>**</em> 然后push你的本地镜像（很多操作和git类似）</p>\n<p>快速构建<br>1、使用docker bulid来构建（会读取dockerfile文件），推荐！更快速简洁<br>2、先pull然后修改之后commit（方法一的底层也是通过这种方式）</p>\n<p>####** 注意 **</p>\n<h2 id=\"1、从国外服务器pull镜像速度较慢，直接使用由DaoCloud或者阿里提供的Registry-Mirror服务\"><a href=\"#1、从国外服务器pull镜像速度较慢，直接使用由DaoCloud或者阿里提供的Registry-Mirror服务\" class=\"headerlink\" title=\"1、从国外服务器pull镜像速度较慢，直接使用由DaoCloud或者阿里提供的Registry Mirror服务\"></a>1、从国外服务器pull镜像速度较慢，直接使用由DaoCloud或者阿里提供的Registry Mirror服务</h2><p><a href=\"http://blog.daocloud.io/how-to-master-docker-image/\" target=\"_blank\" rel=\"noopener\">http://blog.daocloud.io/how-to-master-docker-image/</a></p>\n<h2 id=\"2、挂载磁盘\"><a href=\"#2、挂载磁盘\" class=\"headerlink\" title=\"2、挂载磁盘\"></a>2、挂载磁盘</h2><p>docker run -it -v /home/download:/mnt polaris/centos:v1 /bin/bash<br>将宿主的下载文件夹 挂载 到docker容器polaris镜像中的docker下<br>但如果你想 在已经启动的docker镜像中挂载 请参考（还没试过）<a href=\"http://www.open-open.com/lib/view/open1421996521062.html\" target=\"_blank\" rel=\"noopener\">http://www.open-open.com/lib/view/open1421996521062.html</a></p>\n<p>######3、搭建基本环境(JDK8 + tomcat7)<br>a, 现在宿主机器里wget下资源(JDK8+tomcat7的tar包),坑爹的JDK7官网已经不支持游客下载<br>b, 将宿主磁盘挂载到docker镜像mnt目录下，解压然后cp到自己定义的目录<br>c, jdk: 修改/etc/profile，添加路径保存，然后source /etc/profile更新</p>\n<p>######4、查看容器相关信息（主要是查看网络配置，容器里面很多命令都没有）<br>docker inspect a7e0139b5940</p>\n<p>######5、端口映射<br>docker run -i -t -p 5000:8080 polaris/centos:v1 /bin/bash （交互型）<br>docker run -d -i -t -p 5000:8080 polaris/centos:v1 （后台型）</p>\n<p>######6、阿里云（以本人为例子）<br>下载<br>docker pull registry.cn-hangzhou.aliyuncs.com/polarisnosnow/polaris:v2</p>\n<p>上传<br>docker login –username=<em>**</em>  registry.cn-hangzhou.aliyuncs.com<br>docker tag [ImageId] registry.cn-hangzhou.aliyuncs.com/polarisnosnow/polaris:[镜像版本号]<br>docker push registry.cn-hangzhou.aliyuncs.com/polarisnosnow/polaris:[镜像版本号]</p>\n<p>######7、搭建注册服务器<br>docker pull registry<br>docker run -p 5000:5000 -d -i -t registry<br>之后就可以直接commit&amp;push了<br>docker commit cid 127.0.0.1:5000/my_image:v1<br>docker push 127.0.0.1:5000/my_image:v1</p>\n<p>可以使用docker API查看库中结果<br><a href=\"http://127.0.0.1:5000/v2/_catalog\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:5000/v2/_catalog</a><br><a href=\"http://127.0.0.1:5000/v2/my_image/tag/list\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:5000/v2/my_image/tag/list</a></p>\n<p>注意客户端在/etc/docker/daemon.json 中添加{ “insecure-registries”:[“127.0.0.1:5000”]}<br>安全访问（默认走的https）</p>\n<p>######8、docker管理界面<br>dockerUI:只能用于单机，单功能齐全<br>构建脚本：docker run -d -p 9000:9000 –privileged -v /var/run/docker.sock:/var/run/docker.sock uifd/ui-for-docker</p>\n<p>shipyard:适合集群，各种资源分配，性能检测等<br>/etc/sysconfig/docker中添加对2375的监听 OPTIONS=”-H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock”<br>shipyard构建脚本（启动的容器较多） curl -s <a href=\"https://shipyard-project.com/deploy\" target=\"_blank\" rel=\"noopener\">https://shipyard-project.com/deploy</a> | bash -s<br>Username: admin Password: shipyard<br>或者：docker run –rm -v /var/run/docker.sock:/var/run/docker.sock shipyard/deploy start</p>\n"},{"title":"keepalived笔记","date":"2017-12-15T06:08:30.000Z","_content":"\na、keepalived安装(教程参考：https://www.cnblogs.com/Richardzhu/p/4202416.html )\n1.依赖安装\nc++相关：yum -y install gcc-c++\nopenssl: yum -y install openssl-devel\n2./configure --prefix=/usr/local/keepalived --disable-fwmark 检查环境、设置、生成makefile文件\n3.make && make install 编译安装\n4.修改配置文件/etc/keepalived/keepalived.conf\n5.service keepalived start\n\nb、nginx安装\nwget http://dl.Fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \nrpm -ivh epel-release-latest-7.noarch.rpm\nyum  -y install nginx\nservice nginx start \n**记得开放端口\n\n*issue1\nkeepalived安装在两台物理服务器上，并相互监控对方是否在正常运行。\n当节点A正常的时候:节点A上的keepalived会将下面的信息广播出去:\n192.168.8.100 这个IP对应的MAC地址为节点A网卡的MAC地址\n图中的其它电脑如客户端和NodeB会更新自己的ARP表，对应192.168.8.100的MAC地址=节点A网卡的MAC地址。\n当节点A发生故障的时候，节点B上的keepalived会检测到，并且将下面的信息广播出去:\n192.168.8.100 这个IP对应的MAC地址为节点B网卡的MAC地址\n图中的其它电脑如客户端会更新自己的ARP表，对应192.168.8.100的MAC地址=节点B网卡的MAC地址\n\n*issue2\n在双机启动的时候，主备（master、backup）都会检测对方的priority，如果比对方大自己直接标记为主机；所以如果互相失联，而本身都健康则都会成为master。\n\n*issue3\nkeepalived的ip漂移是当主机宕机或是keepalived挂掉，所以keepalived本身并不能因为nginx的状态随之切换，需要自己构建脚本\n基本思路：1.定时检查nginx状态，当nginx关闭后，直接杀死keepalived进程（外挂定时任务或是keepalived执行脚本）\n\t  2.或是降低优先级也行，不过第一种稍微简单直接。\n\n*issue4\n通过查看VRRP通信原理发现VRRP基于报文实现的。master设置一定时间发送一个报文给backup如果backup没有收到就自己成为master。可推出导致问题的原因是因为backup没有收到报文，所以自己成为了master\nso添加防火墙+延长发送间隔时间(keepalived.conf)\n测试的时候可以直接关闭防火墙\n\n","source":"_posts/keepalived笔记.md","raw":"---\ntitle: keepalived笔记\ndate: 2017-12-15 14:08:30\ntags:\n- linux\n- keepalived\n- nginx\ncategories:\n- 技术\n---\n\na、keepalived安装(教程参考：https://www.cnblogs.com/Richardzhu/p/4202416.html )\n1.依赖安装\nc++相关：yum -y install gcc-c++\nopenssl: yum -y install openssl-devel\n2./configure --prefix=/usr/local/keepalived --disable-fwmark 检查环境、设置、生成makefile文件\n3.make && make install 编译安装\n4.修改配置文件/etc/keepalived/keepalived.conf\n5.service keepalived start\n\nb、nginx安装\nwget http://dl.Fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \nrpm -ivh epel-release-latest-7.noarch.rpm\nyum  -y install nginx\nservice nginx start \n**记得开放端口\n\n*issue1\nkeepalived安装在两台物理服务器上，并相互监控对方是否在正常运行。\n当节点A正常的时候:节点A上的keepalived会将下面的信息广播出去:\n192.168.8.100 这个IP对应的MAC地址为节点A网卡的MAC地址\n图中的其它电脑如客户端和NodeB会更新自己的ARP表，对应192.168.8.100的MAC地址=节点A网卡的MAC地址。\n当节点A发生故障的时候，节点B上的keepalived会检测到，并且将下面的信息广播出去:\n192.168.8.100 这个IP对应的MAC地址为节点B网卡的MAC地址\n图中的其它电脑如客户端会更新自己的ARP表，对应192.168.8.100的MAC地址=节点B网卡的MAC地址\n\n*issue2\n在双机启动的时候，主备（master、backup）都会检测对方的priority，如果比对方大自己直接标记为主机；所以如果互相失联，而本身都健康则都会成为master。\n\n*issue3\nkeepalived的ip漂移是当主机宕机或是keepalived挂掉，所以keepalived本身并不能因为nginx的状态随之切换，需要自己构建脚本\n基本思路：1.定时检查nginx状态，当nginx关闭后，直接杀死keepalived进程（外挂定时任务或是keepalived执行脚本）\n\t  2.或是降低优先级也行，不过第一种稍微简单直接。\n\n*issue4\n通过查看VRRP通信原理发现VRRP基于报文实现的。master设置一定时间发送一个报文给backup如果backup没有收到就自己成为master。可推出导致问题的原因是因为backup没有收到报文，所以自己成为了master\nso添加防火墙+延长发送间隔时间(keepalived.conf)\n测试的时候可以直接关闭防火墙\n\n","slug":"keepalived笔记","published":1,"updated":"2019-05-07T11:48:16.908Z","_id":"cjvdq9h82000054mdx0tdm4ql","comments":1,"layout":"post","photos":[],"link":"","content":"<p>a、keepalived安装(教程参考：<a href=\"https://www.cnblogs.com/Richardzhu/p/4202416.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/Richardzhu/p/4202416.html</a> )<br>1.依赖安装<br>c++相关：yum -y install gcc-c++<br>openssl: yum -y install openssl-devel<br>2./configure –prefix=/usr/local/keepalived –disable-fwmark 检查环境、设置、生成makefile文件<br>3.make &amp;&amp; make install 编译安装<br>4.修改配置文件/etc/keepalived/keepalived.conf<br>5.service keepalived start</p>\n<p>b、nginx安装<br>wget <a href=\"http://dl.Fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\" target=\"_blank\" rel=\"noopener\">http://dl.Fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</a><br>rpm -ivh epel-release-latest-7.noarch.rpm<br>yum  -y install nginx<br>service nginx start<br>**记得开放端口</p>\n<p>*issue1<br>keepalived安装在两台物理服务器上，并相互监控对方是否在正常运行。<br>当节点A正常的时候:节点A上的keepalived会将下面的信息广播出去:<br>192.168.8.100 这个IP对应的MAC地址为节点A网卡的MAC地址<br>图中的其它电脑如客户端和NodeB会更新自己的ARP表，对应192.168.8.100的MAC地址=节点A网卡的MAC地址。<br>当节点A发生故障的时候，节点B上的keepalived会检测到，并且将下面的信息广播出去:<br>192.168.8.100 这个IP对应的MAC地址为节点B网卡的MAC地址<br>图中的其它电脑如客户端会更新自己的ARP表，对应192.168.8.100的MAC地址=节点B网卡的MAC地址</p>\n<p>*issue2<br>在双机启动的时候，主备（master、backup）都会检测对方的priority，如果比对方大自己直接标记为主机；所以如果互相失联，而本身都健康则都会成为master。</p>\n<p>*issue3<br>keepalived的ip漂移是当主机宕机或是keepalived挂掉，所以keepalived本身并不能因为nginx的状态随之切换，需要自己构建脚本<br>基本思路：1.定时检查nginx状态，当nginx关闭后，直接杀死keepalived进程（外挂定时任务或是keepalived执行脚本）<br>      2.或是降低优先级也行，不过第一种稍微简单直接。</p>\n<p>*issue4<br>通过查看VRRP通信原理发现VRRP基于报文实现的。master设置一定时间发送一个报文给backup如果backup没有收到就自己成为master。可推出导致问题的原因是因为backup没有收到报文，所以自己成为了master<br>so添加防火墙+延长发送间隔时间(keepalived.conf)<br>测试的时候可以直接关闭防火墙</p>\n","site":{"data":{}},"excerpt":"","more":"<p>a、keepalived安装(教程参考：<a href=\"https://www.cnblogs.com/Richardzhu/p/4202416.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/Richardzhu/p/4202416.html</a> )<br>1.依赖安装<br>c++相关：yum -y install gcc-c++<br>openssl: yum -y install openssl-devel<br>2./configure –prefix=/usr/local/keepalived –disable-fwmark 检查环境、设置、生成makefile文件<br>3.make &amp;&amp; make install 编译安装<br>4.修改配置文件/etc/keepalived/keepalived.conf<br>5.service keepalived start</p>\n<p>b、nginx安装<br>wget <a href=\"http://dl.Fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\" target=\"_blank\" rel=\"noopener\">http://dl.Fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</a><br>rpm -ivh epel-release-latest-7.noarch.rpm<br>yum  -y install nginx<br>service nginx start<br>**记得开放端口</p>\n<p>*issue1<br>keepalived安装在两台物理服务器上，并相互监控对方是否在正常运行。<br>当节点A正常的时候:节点A上的keepalived会将下面的信息广播出去:<br>192.168.8.100 这个IP对应的MAC地址为节点A网卡的MAC地址<br>图中的其它电脑如客户端和NodeB会更新自己的ARP表，对应192.168.8.100的MAC地址=节点A网卡的MAC地址。<br>当节点A发生故障的时候，节点B上的keepalived会检测到，并且将下面的信息广播出去:<br>192.168.8.100 这个IP对应的MAC地址为节点B网卡的MAC地址<br>图中的其它电脑如客户端会更新自己的ARP表，对应192.168.8.100的MAC地址=节点B网卡的MAC地址</p>\n<p>*issue2<br>在双机启动的时候，主备（master、backup）都会检测对方的priority，如果比对方大自己直接标记为主机；所以如果互相失联，而本身都健康则都会成为master。</p>\n<p>*issue3<br>keepalived的ip漂移是当主机宕机或是keepalived挂掉，所以keepalived本身并不能因为nginx的状态随之切换，需要自己构建脚本<br>基本思路：1.定时检查nginx状态，当nginx关闭后，直接杀死keepalived进程（外挂定时任务或是keepalived执行脚本）<br>      2.或是降低优先级也行，不过第一种稍微简单直接。</p>\n<p>*issue4<br>通过查看VRRP通信原理发现VRRP基于报文实现的。master设置一定时间发送一个报文给backup如果backup没有收到就自己成为master。可推出导致问题的原因是因为backup没有收到报文，所以自己成为了master<br>so添加防火墙+延长发送间隔时间(keepalived.conf)<br>测试的时候可以直接关闭防火墙</p>\n"},{"title":"mongodb基础","date":"2017-07-10T02:52:00.000Z","_content":"\n表/集合、行/文档、字段/域\n新建连接：mongod.exe ip:port/database -u user -p password\n基础查询：show dbs;use database;show tables;\ndb.student.find({name:{$type : 2}},{}).sort({name:1}).skip(20).limit(10)\n查询name域为string类型，按照name正排序，跳过20条数据，返回10条\n\n\n/*********管道查询*/\naggregate()函数\n下例：先匹配TXN_AMT小于1.0的数据，将筛选的数据传入到下一管道处理，根据AC_DT分组求取TXN_AMT总金额\ndb.getCollection('HPSTJNL_CHECKED').aggregate([{$match : {\"TXN_AMT\":{$lte:1.0}}},{$group:{_id : \"$AC_DT\", totalAmt:{$sum:\"$TXN_AMT\"}}}])\nselect AC_DT as _id, sum(TXN_AMT) as totalAmt from hc where TXN_AMT <= 1.0 group by AC_DT\n//必须有一个_id，然后根据它来分组\n\n/*创建索引(1升序，-1逆)*/\ndb.student.ensureIndex({KEY:1})\n\n/*副本集设置（支持一主多从）*/\nngod --port \"PORT\" --dbpath \"YOUR_DB_DATA_PATH\" --replSet \"REPLICA_SET_INSTANCE_NAME\"\n每个服务启动的REPLICA_SET_INSTANCE_NAME必须相同否则会不匹配\nmongod --port 27017 --dbpath d:\\data\\master --replSet rs(主机)\nmongod --port 27018 --dbpath d:\\data\\bak1 --replSet rs（从机）\nmongod --port 27019 --dbpath d:\\data\\bak2 --replSet rs（仲裁：只参与投票）\n\n主机上添加从机：rs.add(\"host:port\")\n主机上添加仲裁：rs.addArb(\"host:port\")\n从机设置可读取：rs.slaveOk(true)\n如果主库宕机，此时会发生内部选举，其中一台从机成为主机，待原主机重新启动之后，会变成从机并将数据从新主机同步过来\n\n\n\n/*集群分片搭建*/ /* http://blog.csdn.net/sharetop/article/details/53610379*/\n//1. 分片服务器\nmongod --port 27020 --dbpath=d:\\data\\shard\\s0 --logpath=d:\\data\\shard\\log\\s0.log --logappend --fork(linux专属) --shardsvr(version3.4)\nmongod --port 27021 --dbpath=d:\\data\\shard\\s1 --logpath=d:\\data\\shard\\log\\s0.log --logappend --fork(linux专属) --shardsvr(version3.4)\n//2. 配置服务器\nmongod --port 27100 --dbpath=d:\\data\\shard\\config --logpath=d:\\data\\shard\\log\\conf.log --logappend --fork(linux专属)  --configsvr --replSet cs(3.4版本的写法)\nuse admin\ncfg = {\n    _id:'cs',\n    configsvr:true,\n    members:[\n        {_id:0,host:'127.0.0.1:27100'}\n     ]\n};\nrs.initiate(cfg);\n//3. 路由服务器\nmongos --port 40000 --configdb cs/127.0.0.1:27100 \n//4. 分片配置\n//登录40000的服务，添加分片\nsh.addShard('127.0.0.1:27020');\nsh.addShard('127.0.0.1:27021');\n//添加需要分片的库,并设置片键（设置了片键的话，每次新增不允许为空）\nsh.enableSharding('polaris');\nsh.shardCollection('polaris.user',{'id':1,'name':1})\n//新增一定数据量的情况下，数据只出现在一个片区，（默认的配置新增10万就会出现在不同的分片）\n\n\n/**********************节点说明***********************************/ //选举算法采用bully算法\nprimary:主节点\narbiteronly:仲裁节点,不存储数据,只参与投票\nSecondary-Only:不能成为主节点,只能做为从节点,并可以参与选举\nHidden:隐藏不被链接的从节点,不被程序访问,但可以参与选举的节点\nDelayed：可以指定一个时间延迟从primary节点同步数据。主要用于备份数据，如果实时同步，误删除数据马上同步到从节点，恢复又恢复不了。\nNon_voting:不参与选举,只负责备分数据\n\n\n/**********************其它说明**************************/\n创建管理用户\nuse aedata\ndb.createUser({\n    user:'admin',\n    pwd:'111111',\n    roles:[{role:'readWrite',db:'aedata'}]\n})\n\n//格式化\ndb.getCollection('HPSTJNL_CHECKED').aggregate([\n{\n\t$match : \n\t\t{\n\t\t\tTXN_AMT : \n\t\t\t{\n\t\t\t\t$lte : 1.0\n\t\t\t}\n\t\t}\n},\n{\n\t$group : \n\t\t{\n\t\t\t_id : \"$AC_DT\", \n\t\t\ttotalAmt : {\n\t\t\t\t\t\t\t$sum:\"$TXN_AMT\"\n\t\t\t\t\t\t}\n\t\t}\n}\n])","source":"_posts/mongodb基础.md","raw":"---\ntitle: mongodb基础\ndate: 2017-07-10 10:52:00\ntags:\n- linux\n- mongodb\ncategories:\n- 技术\n---\n\n表/集合、行/文档、字段/域\n新建连接：mongod.exe ip:port/database -u user -p password\n基础查询：show dbs;use database;show tables;\ndb.student.find({name:{$type : 2}},{}).sort({name:1}).skip(20).limit(10)\n查询name域为string类型，按照name正排序，跳过20条数据，返回10条\n\n\n/*********管道查询*/\naggregate()函数\n下例：先匹配TXN_AMT小于1.0的数据，将筛选的数据传入到下一管道处理，根据AC_DT分组求取TXN_AMT总金额\ndb.getCollection('HPSTJNL_CHECKED').aggregate([{$match : {\"TXN_AMT\":{$lte:1.0}}},{$group:{_id : \"$AC_DT\", totalAmt:{$sum:\"$TXN_AMT\"}}}])\nselect AC_DT as _id, sum(TXN_AMT) as totalAmt from hc where TXN_AMT <= 1.0 group by AC_DT\n//必须有一个_id，然后根据它来分组\n\n/*创建索引(1升序，-1逆)*/\ndb.student.ensureIndex({KEY:1})\n\n/*副本集设置（支持一主多从）*/\nngod --port \"PORT\" --dbpath \"YOUR_DB_DATA_PATH\" --replSet \"REPLICA_SET_INSTANCE_NAME\"\n每个服务启动的REPLICA_SET_INSTANCE_NAME必须相同否则会不匹配\nmongod --port 27017 --dbpath d:\\data\\master --replSet rs(主机)\nmongod --port 27018 --dbpath d:\\data\\bak1 --replSet rs（从机）\nmongod --port 27019 --dbpath d:\\data\\bak2 --replSet rs（仲裁：只参与投票）\n\n主机上添加从机：rs.add(\"host:port\")\n主机上添加仲裁：rs.addArb(\"host:port\")\n从机设置可读取：rs.slaveOk(true)\n如果主库宕机，此时会发生内部选举，其中一台从机成为主机，待原主机重新启动之后，会变成从机并将数据从新主机同步过来\n\n\n\n/*集群分片搭建*/ /* http://blog.csdn.net/sharetop/article/details/53610379*/\n//1. 分片服务器\nmongod --port 27020 --dbpath=d:\\data\\shard\\s0 --logpath=d:\\data\\shard\\log\\s0.log --logappend --fork(linux专属) --shardsvr(version3.4)\nmongod --port 27021 --dbpath=d:\\data\\shard\\s1 --logpath=d:\\data\\shard\\log\\s0.log --logappend --fork(linux专属) --shardsvr(version3.4)\n//2. 配置服务器\nmongod --port 27100 --dbpath=d:\\data\\shard\\config --logpath=d:\\data\\shard\\log\\conf.log --logappend --fork(linux专属)  --configsvr --replSet cs(3.4版本的写法)\nuse admin\ncfg = {\n    _id:'cs',\n    configsvr:true,\n    members:[\n        {_id:0,host:'127.0.0.1:27100'}\n     ]\n};\nrs.initiate(cfg);\n//3. 路由服务器\nmongos --port 40000 --configdb cs/127.0.0.1:27100 \n//4. 分片配置\n//登录40000的服务，添加分片\nsh.addShard('127.0.0.1:27020');\nsh.addShard('127.0.0.1:27021');\n//添加需要分片的库,并设置片键（设置了片键的话，每次新增不允许为空）\nsh.enableSharding('polaris');\nsh.shardCollection('polaris.user',{'id':1,'name':1})\n//新增一定数据量的情况下，数据只出现在一个片区，（默认的配置新增10万就会出现在不同的分片）\n\n\n/**********************节点说明***********************************/ //选举算法采用bully算法\nprimary:主节点\narbiteronly:仲裁节点,不存储数据,只参与投票\nSecondary-Only:不能成为主节点,只能做为从节点,并可以参与选举\nHidden:隐藏不被链接的从节点,不被程序访问,但可以参与选举的节点\nDelayed：可以指定一个时间延迟从primary节点同步数据。主要用于备份数据，如果实时同步，误删除数据马上同步到从节点，恢复又恢复不了。\nNon_voting:不参与选举,只负责备分数据\n\n\n/**********************其它说明**************************/\n创建管理用户\nuse aedata\ndb.createUser({\n    user:'admin',\n    pwd:'111111',\n    roles:[{role:'readWrite',db:'aedata'}]\n})\n\n//格式化\ndb.getCollection('HPSTJNL_CHECKED').aggregate([\n{\n\t$match : \n\t\t{\n\t\t\tTXN_AMT : \n\t\t\t{\n\t\t\t\t$lte : 1.0\n\t\t\t}\n\t\t}\n},\n{\n\t$group : \n\t\t{\n\t\t\t_id : \"$AC_DT\", \n\t\t\ttotalAmt : {\n\t\t\t\t\t\t\t$sum:\"$TXN_AMT\"\n\t\t\t\t\t\t}\n\t\t}\n}\n])","slug":"mongodb基础","published":1,"updated":"2019-05-07T11:54:23.509Z","_id":"cjvdqijdi0001dcmdad2jsa6w","comments":1,"layout":"post","photos":[],"link":"","content":"<p>表/集合、行/文档、字段/域<br>新建连接：mongod.exe ip:port/database -u user -p password<br>基础查询：show dbs;use database;show tables;<br>db.student.find({name:{$type : 2}},{}).sort({name:1}).skip(20).limit(10)<br>查询name域为string类型，按照name正排序，跳过20条数据，返回10条</p>\n<p>/<strong><strong>*</strong></strong>管道查询*/<br>aggregate()函数<br>下例：先匹配TXN_AMT小于1.0的数据，将筛选的数据传入到下一管道处理，根据AC_DT分组求取TXN_AMT总金额<br>db.getCollection(‘HPSTJNL_CHECKED’).aggregate([{$match : {“TXN_AMT”:{$lte:1.0}}},{$group:{_id : “$AC_DT”, totalAmt:{$sum:”$TXN_AMT”}}}])<br>select AC_DT as _id, sum(TXN_AMT) as totalAmt from hc where TXN_AMT &lt;= 1.0 group by AC_DT<br>//必须有一个_id，然后根据它来分组</p>\n<p>/<em>创建索引(1升序，-1逆)</em>/<br>db.student.ensureIndex({KEY:1})</p>\n<p>/<em>副本集设置（支持一主多从）</em>/<br>ngod –port “PORT” –dbpath “YOUR_DB_DATA_PATH” –replSet “REPLICA_SET_INSTANCE_NAME”<br>每个服务启动的REPLICA_SET_INSTANCE_NAME必须相同否则会不匹配<br>mongod –port 27017 –dbpath d:\\data\\master –replSet rs(主机)<br>mongod –port 27018 –dbpath d:\\data\\bak1 –replSet rs（从机）<br>mongod –port 27019 –dbpath d:\\data\\bak2 –replSet rs（仲裁：只参与投票）</p>\n<p>主机上添加从机：rs.add(“host:port”)<br>主机上添加仲裁：rs.addArb(“host:port”)<br>从机设置可读取：rs.slaveOk(true)<br>如果主库宕机，此时会发生内部选举，其中一台从机成为主机，待原主机重新启动之后，会变成从机并将数据从新主机同步过来</p>\n<p>/<em>集群分片搭建</em>/ /<em> <a href=\"http://blog.csdn.net/sharetop/article/details/53610379\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/sharetop/article/details/53610379</a></em>/<br>//1. 分片服务器<br>mongod –port 27020 –dbpath=d:\\data\\shard\\s0 –logpath=d:\\data\\shard\\log\\s0.log –logappend –fork(linux专属) –shardsvr(version3.4)<br>mongod –port 27021 –dbpath=d:\\data\\shard\\s1 –logpath=d:\\data\\shard\\log\\s0.log –logappend –fork(linux专属) –shardsvr(version3.4)<br>//2. 配置服务器<br>mongod –port 27100 –dbpath=d:\\data\\shard\\config –logpath=d:\\data\\shard\\log\\conf.log –logappend –fork(linux专属)  –configsvr –replSet cs(3.4版本的写法)<br>use admin<br>cfg = {<br>    _id:’cs’,<br>    configsvr:true,<br>    members:[<br>        {_id:0,host:’127.0.0.1:27100’}<br>     ]<br>};<br>rs.initiate(cfg);<br>//3. 路由服务器<br>mongos –port 40000 –configdb cs/127.0.0.1:27100<br>//4. 分片配置<br>//登录40000的服务，添加分片<br>sh.addShard(‘127.0.0.1:27020’);<br>sh.addShard(‘127.0.0.1:27021’);<br>//添加需要分片的库,并设置片键（设置了片键的话，每次新增不允许为空）<br>sh.enableSharding(‘polaris’);<br>sh.shardCollection(‘polaris.user’,{‘id’:1,’name’:1})<br>//新增一定数据量的情况下，数据只出现在一个片区，（默认的配置新增10万就会出现在不同的分片）</p>\n<p>/<strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong>节点说明<strong><strong><strong><strong><strong><strong><strong><strong>***</strong></strong></strong></strong></strong></strong></strong></strong>/ //选举算法采用bully算法<br>primary:主节点<br>arbiteronly:仲裁节点,不存储数据,只参与投票<br>Secondary-Only:不能成为主节点,只能做为从节点,并可以参与选举<br>Hidden:隐藏不被链接的从节点,不被程序访问,但可以参与选举的节点<br>Delayed：可以指定一个时间延迟从primary节点同步数据。主要用于备份数据，如果实时同步，误删除数据马上同步到从节点，恢复又恢复不了。<br>Non_voting:不参与选举,只负责备分数据</p>\n<p>/<strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong>其它说明<strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong>/<br>创建管理用户<br>use aedata<br>db.createUser({<br>    user:’admin’,<br>    pwd:’111111’,<br>    roles:[{role:’readWrite’,db:’aedata’}]<br>})</p>\n<p>//格式化<br>db.getCollection(‘HPSTJNL_CHECKED’).aggregate([<br>{<br>    $match :<br>        {<br>            TXN_AMT :<br>            {<br>                $lte : 1.0<br>            }<br>        }<br>},<br>{<br>    $group :<br>        {<br>            _id : “$AC_DT”,<br>            totalAmt : {<br>                            $sum:”$TXN_AMT”<br>                        }<br>        }<br>}<br>])</p>\n","site":{"data":{}},"excerpt":"","more":"<p>表/集合、行/文档、字段/域<br>新建连接：mongod.exe ip:port/database -u user -p password<br>基础查询：show dbs;use database;show tables;<br>db.student.find({name:{$type : 2}},{}).sort({name:1}).skip(20).limit(10)<br>查询name域为string类型，按照name正排序，跳过20条数据，返回10条</p>\n<p>/<strong><strong>*</strong></strong>管道查询*/<br>aggregate()函数<br>下例：先匹配TXN_AMT小于1.0的数据，将筛选的数据传入到下一管道处理，根据AC_DT分组求取TXN_AMT总金额<br>db.getCollection(‘HPSTJNL_CHECKED’).aggregate([{$match : {“TXN_AMT”:{$lte:1.0}}},{$group:{_id : “$AC_DT”, totalAmt:{$sum:”$TXN_AMT”}}}])<br>select AC_DT as _id, sum(TXN_AMT) as totalAmt from hc where TXN_AMT &lt;= 1.0 group by AC_DT<br>//必须有一个_id，然后根据它来分组</p>\n<p>/<em>创建索引(1升序，-1逆)</em>/<br>db.student.ensureIndex({KEY:1})</p>\n<p>/<em>副本集设置（支持一主多从）</em>/<br>ngod –port “PORT” –dbpath “YOUR_DB_DATA_PATH” –replSet “REPLICA_SET_INSTANCE_NAME”<br>每个服务启动的REPLICA_SET_INSTANCE_NAME必须相同否则会不匹配<br>mongod –port 27017 –dbpath d:\\data\\master –replSet rs(主机)<br>mongod –port 27018 –dbpath d:\\data\\bak1 –replSet rs（从机）<br>mongod –port 27019 –dbpath d:\\data\\bak2 –replSet rs（仲裁：只参与投票）</p>\n<p>主机上添加从机：rs.add(“host:port”)<br>主机上添加仲裁：rs.addArb(“host:port”)<br>从机设置可读取：rs.slaveOk(true)<br>如果主库宕机，此时会发生内部选举，其中一台从机成为主机，待原主机重新启动之后，会变成从机并将数据从新主机同步过来</p>\n<p>/<em>集群分片搭建</em>/ /<em> <a href=\"http://blog.csdn.net/sharetop/article/details/53610379\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/sharetop/article/details/53610379</a></em>/<br>//1. 分片服务器<br>mongod –port 27020 –dbpath=d:\\data\\shard\\s0 –logpath=d:\\data\\shard\\log\\s0.log –logappend –fork(linux专属) –shardsvr(version3.4)<br>mongod –port 27021 –dbpath=d:\\data\\shard\\s1 –logpath=d:\\data\\shard\\log\\s0.log –logappend –fork(linux专属) –shardsvr(version3.4)<br>//2. 配置服务器<br>mongod –port 27100 –dbpath=d:\\data\\shard\\config –logpath=d:\\data\\shard\\log\\conf.log –logappend –fork(linux专属)  –configsvr –replSet cs(3.4版本的写法)<br>use admin<br>cfg = {<br>    _id:’cs’,<br>    configsvr:true,<br>    members:[<br>        {_id:0,host:’127.0.0.1:27100’}<br>     ]<br>};<br>rs.initiate(cfg);<br>//3. 路由服务器<br>mongos –port 40000 –configdb cs/127.0.0.1:27100<br>//4. 分片配置<br>//登录40000的服务，添加分片<br>sh.addShard(‘127.0.0.1:27020’);<br>sh.addShard(‘127.0.0.1:27021’);<br>//添加需要分片的库,并设置片键（设置了片键的话，每次新增不允许为空）<br>sh.enableSharding(‘polaris’);<br>sh.shardCollection(‘polaris.user’,{‘id’:1,’name’:1})<br>//新增一定数据量的情况下，数据只出现在一个片区，（默认的配置新增10万就会出现在不同的分片）</p>\n<p>/<strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong>节点说明<strong><strong><strong><strong><strong><strong><strong><strong>***</strong></strong></strong></strong></strong></strong></strong></strong>/ //选举算法采用bully算法<br>primary:主节点<br>arbiteronly:仲裁节点,不存储数据,只参与投票<br>Secondary-Only:不能成为主节点,只能做为从节点,并可以参与选举<br>Hidden:隐藏不被链接的从节点,不被程序访问,但可以参与选举的节点<br>Delayed：可以指定一个时间延迟从primary节点同步数据。主要用于备份数据，如果实时同步，误删除数据马上同步到从节点，恢复又恢复不了。<br>Non_voting:不参与选举,只负责备分数据</p>\n<p>/<strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong>其它说明<strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong>/<br>创建管理用户<br>use aedata<br>db.createUser({<br>    user:’admin’,<br>    pwd:’111111’,<br>    roles:[{role:’readWrite’,db:’aedata’}]<br>})</p>\n<p>//格式化<br>db.getCollection(‘HPSTJNL_CHECKED’).aggregate([<br>{<br>    $match :<br>        {<br>            TXN_AMT :<br>            {<br>                $lte : 1.0<br>            }<br>        }<br>},<br>{<br>    $group :<br>        {<br>            _id : “$AC_DT”,<br>            totalAmt : {<br>                            $sum:”$TXN_AMT”<br>                        }<br>        }<br>}<br>])</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjuxqcibr0002dwmdoivcpumz","category_id":"cjuxqcicc0005dwmdsmwxz0bk","_id":"cjuxqcid0000ddwmdzx3dhs6l"},{"post_id":"cjuxqcicv0009dwmd2oyawb69","category_id":"cjuxqcicz000bdwmdfgtmjg38","_id":"cjuxqcid3000fdwmdrwpuyuz2"},{"post_id":"cjvdq1lqy0000zsmdnbkfbccf","category_id":"cjuxqcicc0005dwmdsmwxz0bk","_id":"cjvdq28g60002zsmd11lvcyup"},{"post_id":"cjvdq9h82000054mdx0tdm4ql","category_id":"cjuxqcicc0005dwmdsmwxz0bk","_id":"cjvdqb8qg000254mdbb9989jk"},{"post_id":"cjvdqijdi0001dcmdad2jsa6w","category_id":"cjuxqcicc0005dwmdsmwxz0bk","_id":"cjvdqjss70004dcmdaukl747x"}],"PostTag":[{"post_id":"cjuxqcibr0002dwmdoivcpumz","tag_id":"cjuxqcicj0006dwmdthp5imz1","_id":"cjuxqcicx000adwmdrkhrufu1"},{"post_id":"cjuxqcicv0009dwmd2oyawb69","tag_id":"cjuxqcicz000cdwmddkf1xkv5","_id":"cjuxqcid4000gdwmdzgt2fo42"},{"post_id":"cjuxqcicv0009dwmd2oyawb69","tag_id":"cjuxqcid1000edwmd08op2mtk","_id":"cjuxqcid4000hdwmdm0x5gmvw"},{"post_id":"cjvdq1lqy0000zsmdnbkfbccf","tag_id":"cjuxqcicj0006dwmdthp5imz1","_id":"cjvdq28g50001zsmdq5xbw09f"},{"post_id":"cjvdq1lqy0000zsmdnbkfbccf","tag_id":"cjvdq2vee0003zsmds52rea7f","_id":"cjvdq2veg0004zsmdl7velck8"},{"post_id":"cjvdq9h82000054mdx0tdm4ql","tag_id":"cjuxqcicj0006dwmdthp5imz1","_id":"cjvdqb8qh000354md4wvcvcue"},{"post_id":"cjvdq9h82000054mdx0tdm4ql","tag_id":"cjvdqb8qe000154mdq42rtlmz","_id":"cjvdqb8qi000454mdx9z0ivy3"},{"post_id":"cjvdq9h82000054mdx0tdm4ql","tag_id":"cjvdqbfet000554mdaww6shlv","_id":"cjvdqbfew000654mdic9s5beo"},{"post_id":"cjvdqijdi0001dcmdad2jsa6w","tag_id":"cjuxqcicj0006dwmdthp5imz1","_id":"cjvdqjss40002dcmdqb95qamq"},{"post_id":"cjvdqijdi0001dcmdad2jsa6w","tag_id":"cjvdqkik00006dcmdesxuk5u4","_id":"cjvdqkik40007dcmdn94x5lhp"}],"Tag":[{"name":"linux","_id":"cjuxqcicj0006dwmdthp5imz1"},{"name":"爱情","_id":"cjuxqcicz000cdwmddkf1xkv5"},{"name":"书评","_id":"cjuxqcid1000edwmd08op2mtk"},{"name":"docker","_id":"cjvdq2vee0003zsmds52rea7f"},{"name":"keepalived","_id":"cjvdqb8qe000154mdq42rtlmz"},{"name":"nginx","_id":"cjvdqbfet000554mdaww6shlv"},{"name":"mongodb","_id":"cjvdqkik00006dcmdesxuk5u4"}]}}